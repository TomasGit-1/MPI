,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99
0,"{'tree': Node(/), 'expresion': '((log(log(1))+log((X+1)))/log(sin(cos(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(sin(((cos(1)/(X-X))/((X+X)+log(X)))))-log(sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(log(cos((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(log(1))/((sin((log(X)-cos(1)))*sin(X))*cos((X/X))))*log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((1*X)*sin(cos(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log((X/X)))/cos((1/1))))*cos(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((cos(X)*log(1))*sin((sin(X)+sin(log((log(1)/(X*1)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((X+1)*log((log(1)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(((1-1)/log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*X)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log((log(X)+log(cos(1))))-(log((cos((X-1))*(1/X)))*sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((sin(cos(X))*log(((((cos(X)*cos(1))*sin((X-X)))*(1/X))-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((X+1)))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((X/X)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log(log(log(log((log(X)-sin((log(X)-cos(1)))))))))-sin(log((log(1)/(((X-1)-(X*X))-(X*X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((X-X)+(X/X))))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(X*X)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(1)/log(1))*(cos(1)-cos(1)))*((X-1)+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/sin(X))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((cos(1)/(X-X))/((X+X)+log(X))))*log((sin(X)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log(log(X))+sin(((1*1)/log(log(sin(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(log((log(1)/(X*X))))/log(1))*(sin(X)-log(1)))*((((cos(X)*cos(1))-sin((X-X)))*(1/X))+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((1+1)))/log(cos(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((1-1)*(X*X))))/cos(log((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((1+X)))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos((1/X))*log(1))-sin((X*1)))/sin((log(1)/(X*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((X-1)/(X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((1/1)+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(cos(X))*log(1))', 'y_predict': [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((X+X)*log((sin(X)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(X*X)))/log(log(sin(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos((((log(cos(X))*sin(log(X)))+cos(log((sin(1)-(X/X)))))-cos(1)))*log((sin(X)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((1*X)*log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((cos(X)-sin((log(1)-cos(sin(((cos(1)/(X-X))/((X+X)+log(X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((cos(X)-sin((log(X)-cos(sin(((cos(1)/(X-X))/((X+X)+log(X)))))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(1)/log(1))-(sin(X)-log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((((((log(1)/(X/1))/((1*1)*cos(1)))+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(1)))+sin(1))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((X*X)*sin(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos(X)*log(X))-sin((X-X)))/sin((log(1)+((1*X)/sin(sin(log(((X-1)*(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin(log(log(log((X-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log((sin(1)-(X/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(log(cos((1-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((cos(log((sin(1)-(X/X))))/((sin(1)*log(1))/cos((1/X))))*log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(log((log(1)/(X*X))))/log(1))*(sin(X)-log(1)))*((((1/1)+(1/X))/cos(log(1)))+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((log(X)-cos((log(X)+((1*X)-(log((1+1))+(X*X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log(1))/cos((1/X))))*log(log((log(X)-cos((log(1)+((1*X)-(log((1+1))+(X*X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(cos(X)))+cos(cos(1)))-log(log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log((log(X)+log(cos(1))))-(log((cos((X-1))*((cos((1*X))*log(1))-sin((X*1)))))*sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((1-1)*(1/1))))/cos(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((X-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(X/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(log(1))*log(((X-1)-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((X*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/cos(log(log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(log(1))*log(((((cos(X)*sin(1))*sin((X-X)))*(1/X))-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((cos(X)*log(1))*sin((sin(1)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((sin(1)/(X-X))+(log(1)/(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(1)*log(((1-1)-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/log(((1*1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log(sin(X))+sin((cos(1)/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(sin(log(log((log(X)-cos((log(1)+((1*X)-((cos(1)/log(1))*(log(log(X))+sin(((1*X)*sin(log(1)))))))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*(cos(1)-cos(1)))*((X-1)+(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((log(sin(X))+sin((1*X)))*(X/X)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((sin(((1-X)*(1*X)))-sin((log(X)-cos(1)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((log(sin(X))+sin((X*X)))*(X/X)))/log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((X/X)))/log(log(((((X/X)+(1/X))/log(((X*1)-cos(1))))+cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(cos(1)))+cos(cos(1)))-log(log(log(cos(sin((X-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((((((log(1)/(X/1))/((1*1)*log(cos(X))))+(1+X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((log(X)-cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*1)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(X))+sin(log((X/X))))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log((X/X)))/log(sin(cos(X)))))*cos(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(1)/(X/X))*(1+X))+(((1-1)/(1-1))-cos(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(1)/log(1))*(log(log(X))+sin(((1*X)*cos((X-X))))))*((((cos(X)*log(1))-sin((X*X)))/(1/X))+(cos(sin(X))/(X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(sin(((cos(1)+(X-X))/((X+X)+log(X)))))-sin(log((log(1)/(((X-1)-(X*X))-(X*X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((log(log(X))+sin(((1*X)/log(log(1))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(1)/cos(log(log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((cos(1)/(X-X))/((X+X)+log(X))))/log(cos(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((X-1)*(X*X))))/log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin(log(log(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin((X-X))*log(1))-sin((X*1)))/sin((log(1)/(X*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))+log((X+1)))/log(sin(cos(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}"
1,"{'tree': Node(/), 'expresion': '((log(log(1))+log((X+1)))/log(sin(cos(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(sin(((cos(1)/(X-X))/((X+X)+log(X)))))-log(sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(log(cos((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(log(1))/((sin((log(X)-cos(1)))*sin(X))*cos((X/X))))*log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((1*X)*sin(cos(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log((X/X)))/cos((1/1))))*cos(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((cos(X)*log(1))*sin((sin(X)+sin(log((log(1)/(X*1)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((X+1)*log((log(1)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(((1-1)/log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*X)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log((log(X)+log(cos(1))))-(log((cos((X-1))*(1/X)))*sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((sin(cos(X))*log(((((cos(X)*cos(1))*sin((X-X)))*(1/X))-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((X+1)))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((X/X)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log(log(log(log((log(X)-sin((log(X)-cos(1)))))))))-sin(log((log(1)/(((X-1)-(X*X))-(X*X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((X-X)+(X/X))))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(X*X)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(1)/log(1))*(cos(1)-cos(1)))*((X-1)+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/sin(X))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((cos(1)/(X-X))/((X+X)+log(X))))*log((sin(X)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log(log(X))+sin(((1*1)/log(log(sin(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(log((log(1)/(X*X))))/log(1))*(sin(X)-log(1)))*((((cos(X)*cos(1))-sin((X-X)))*(1/X))+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((1+1)))/log(cos(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((1-1)*(X*X))))/cos(log((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((1+X)))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos((1/X))*log(1))-sin((X*1)))/sin((log(1)/(X*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((X-1)/(X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((1/1)+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(cos(X))*log(1))', 'y_predict': [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((X+X)*log((sin(X)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(X*X)))/log(log(sin(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos((((log(cos(X))*sin(log(X)))+cos(log((sin(1)-(X/X)))))-cos(1)))*log((sin(X)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((1*X)*log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((cos(X)-sin((log(1)-cos(sin(((cos(1)/(X-X))/((X+X)+log(X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((cos(X)-sin((log(X)-cos(sin(((cos(1)/(X-X))/((X+X)+log(X)))))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(1)/log(1))-(sin(X)-log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((((((log(1)/(X/1))/((1*1)*cos(1)))+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(1)))+sin(1))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((X*X)*sin(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos(X)*log(X))-sin((X-X)))/sin((log(1)+((1*X)/sin(sin(log(((X-1)*(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin(log(log(log((X-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log((sin(1)-(X/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(log(cos((1-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((cos(log((sin(1)-(X/X))))/((sin(1)*log(1))/cos((1/X))))*log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(log((log(1)/(X*X))))/log(1))*(sin(X)-log(1)))*((((1/1)+(1/X))/cos(log(1)))+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((log(X)-cos((log(X)+((1*X)-(log((1+1))+(X*X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log(1))/cos((1/X))))*log(log((log(X)-cos((log(1)+((1*X)-(log((1+1))+(X*X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(cos(X)))+cos(cos(1)))-log(log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log((log(X)+log(cos(1))))-(log((cos((X-1))*((cos((1*X))*log(1))-sin((X*1)))))*sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((1-1)*(1/1))))/cos(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((X-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(X/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(log(1))*log(((X-1)-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((X*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/cos(log(log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(log(1))*log(((((cos(X)*sin(1))*sin((X-X)))*(1/X))-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((cos(X)*log(1))*sin((sin(1)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((sin(1)/(X-X))+(log(1)/(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(1)*log(((1-1)-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/log(((1*1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log(sin(X))+sin((cos(1)/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(sin(log(log((log(X)-cos((log(1)+((1*X)-((cos(1)/log(1))*(log(log(X))+sin(((1*X)*sin(log(1)))))))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*(cos(1)-cos(1)))*((X-1)+(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((log(sin(X))+sin((1*X)))*(X/X)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((sin(((1-X)*(1*X)))-sin((log(X)-cos(1)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((log(sin(X))+sin((X*X)))*(X/X)))/log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((X/X)))/log(log(((((X/X)+(1/X))/log(((X*1)-cos(1))))+cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(cos(1)))+cos(cos(1)))-log(log(log(cos(sin((X-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((((((log(1)/(X/1))/((1*1)*log(cos(X))))+(1+X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((log(X)-cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*1)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(X))+sin(log((X/X))))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log((X/X)))/log(sin(cos(X)))))*cos(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(1)/(X/X))*(1+X))+(((1-1)/(1-1))-cos(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(1)/log(1))*(log(log(X))+sin(((1*X)*cos((X-X))))))*((((cos(X)*log(1))-sin((X*X)))/(1/X))+(cos(sin(X))/(X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(sin(((cos(1)+(X-X))/((X+X)+log(X)))))-sin(log((log(1)/(((X-1)-(X*X))-(X*X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((log(log(X))+sin(((1*X)/log(log(1))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(1)/cos(log(log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((cos(1)/(X-X))/((X+X)+log(X))))/log(cos(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((X-1)*(X*X))))/log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin(log(log(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin((X-X))*log(1))-sin((X*1)))/sin((log(1)/(X*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))+log((X+1)))/log(sin(cos(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}"
2,"{'tree': Node(/), 'expresion': '((log(log(1))+log((X+1)))/log(sin(cos(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(sin(((cos(1)/(X-X))/((X+X)+log(X)))))-log(sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(log(cos((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(log(1))/((sin((log(X)-cos(1)))*sin(X))*cos((X/X))))*log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((1*X)*sin(cos(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log((X/X)))/cos((1/1))))*cos(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((cos(X)*log(1))*sin((sin(X)+sin(log((log(1)/(X*1)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((X+1)*log((log(1)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(((1-1)/log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*X)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log((log(X)+log(cos(1))))-(log((cos((X-1))*(1/X)))*sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((sin(cos(X))*log(((((cos(X)*cos(1))*sin((X-X)))*(1/X))-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((X+1)))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((X/X)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log(log(log(log((log(X)-sin((log(X)-cos(1)))))))))-sin(log((log(1)/(((X-1)-(X*X))-(X*X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((X-X)+(X/X))))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(X*X)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(1)/log(1))*(cos(1)-cos(1)))*((X-1)+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/sin(X))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((cos(1)/(X-X))/((X+X)+log(X))))*log((sin(X)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log(log(X))+sin(((1*1)/log(log(sin(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(log((log(1)/(X*X))))/log(1))*(sin(X)-log(1)))*((((cos(X)*cos(1))-sin((X-X)))*(1/X))+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((1+1)))/log(cos(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((1-1)*(X*X))))/cos(log((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((1+X)))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos((1/X))*log(1))-sin((X*1)))/sin((log(1)/(X*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((X-1)/(X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((1/1)+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(cos(X))*log(1))', 'y_predict': [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((X+X)*log((sin(X)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(X*X)))/log(log(sin(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos((((log(cos(X))*sin(log(X)))+cos(log((sin(1)-(X/X)))))-cos(1)))*log((sin(X)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((1*X)*log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((cos(X)-sin((log(1)-cos(sin(((cos(1)/(X-X))/((X+X)+log(X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((cos(X)-sin((log(X)-cos(sin(((cos(1)/(X-X))/((X+X)+log(X)))))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(1)/log(1))-(sin(X)-log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((((((log(1)/(X/1))/((1*1)*cos(1)))+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(1)))+sin(1))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((X*X)*sin(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos(X)*log(X))-sin((X-X)))/sin((log(1)+((1*X)/sin(sin(log(((X-1)*(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin(log(log(log((X-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log((sin(1)-(X/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(log(cos((1-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((cos(log((sin(1)-(X/X))))/((sin(1)*log(1))/cos((1/X))))*log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(log((log(1)/(X*X))))/log(1))*(sin(X)-log(1)))*((((1/1)+(1/X))/cos(log(1)))+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((log(X)-cos((log(X)+((1*X)-(log((1+1))+(X*X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log(1))/cos((1/X))))*log(log((log(X)-cos((log(1)+((1*X)-(log((1+1))+(X*X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(cos(X)))+cos(cos(1)))-log(log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log((log(X)+log(cos(1))))-(log((cos((X-1))*((cos((1*X))*log(1))-sin((X*1)))))*sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((1-1)*(1/1))))/cos(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((X-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(X/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(log(1))*log(((X-1)-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((X*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/cos(log(log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(log(1))*log(((((cos(X)*sin(1))*sin((X-X)))*(1/X))-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((cos(X)*log(1))*sin((sin(1)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((sin(1)/(X-X))+(log(1)/(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(1)*log(((1-1)-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/log(((1*1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log(sin(X))+sin((cos(1)/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(sin(log(log((log(X)-cos((log(1)+((1*X)-((cos(1)/log(1))*(log(log(X))+sin(((1*X)*sin(log(1)))))))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*(cos(1)-cos(1)))*((X-1)+(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((log(sin(X))+sin((1*X)))*(X/X)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((sin(((1-X)*(1*X)))-sin((log(X)-cos(1)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((log(sin(X))+sin((X*X)))*(X/X)))/log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((X/X)))/log(log(((((X/X)+(1/X))/log(((X*1)-cos(1))))+cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(cos(1)))+cos(cos(1)))-log(log(log(cos(sin((X-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((((((log(1)/(X/1))/((1*1)*log(cos(X))))+(1+X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((log(X)-cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*1)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(X))+sin(log((X/X))))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log((X/X)))/log(sin(cos(X)))))*cos(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(1)/(X/X))*(1+X))+(((1-1)/(1-1))-cos(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(1)/log(1))*(log(log(X))+sin(((1*X)*cos((X-X))))))*((((cos(X)*log(1))-sin((X*X)))/(1/X))+(cos(sin(X))/(X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(sin(((cos(1)+(X-X))/((X+X)+log(X)))))-sin(log((log(1)/(((X-1)-(X*X))-(X*X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((log(log(X))+sin(((1*X)/log(log(1))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(1)/cos(log(log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((cos(1)/(X-X))/((X+X)+log(X))))/log(cos(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((X-1)*(X*X))))/log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin(log(log(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin((X-X))*log(1))-sin((X*1)))/sin((log(1)/(X*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))+log((X+1)))/log(sin(cos(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}"
3,"{'tree': Node(/), 'expresion': '((log(log(1))+log((X+1)))/log(sin(cos(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(sin(((cos(1)/(X-X))/((X+X)+log(X)))))-log(sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(log(cos((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(log(1))/((sin((log(X)-cos(1)))*sin(X))*cos((X/X))))*log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((1*X)*sin(cos(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log((X/X)))/cos((1/1))))*cos(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((cos(X)*log(1))*sin((sin(X)+sin(log((log(1)/(X*1)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((X+1)*log((log(1)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(((1-1)/log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*X)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log((log(X)+log(cos(1))))-(log((cos((X-1))*(1/X)))*sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((sin(cos(X))*log(((((cos(X)*cos(1))*sin((X-X)))*(1/X))-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((X+1)))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((X/X)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log(log(log(log((log(X)-sin((log(X)-cos(1)))))))))-sin(log((log(1)/(((X-1)-(X*X))-(X*X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((X-X)+(X/X))))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(X*X)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(1)/log(1))*(cos(1)-cos(1)))*((X-1)+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/sin(X))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((cos(1)/(X-X))/((X+X)+log(X))))*log((sin(X)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log(log(X))+sin(((1*1)/log(log(sin(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(log((log(1)/(X*X))))/log(1))*(sin(X)-log(1)))*((((cos(X)*cos(1))-sin((X-X)))*(1/X))+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((1+1)))/log(cos(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((1-1)*(X*X))))/cos(log((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((1+X)))/log(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos((1/X))*log(1))-sin((X*1)))/sin((log(1)/(X*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((X-1)/(X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((1/1)+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(cos(X))*log(1))', 'y_predict': [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((X+X)*log((sin(X)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(X*X)))/log(log(sin(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos((((log(cos(X))*sin(log(X)))+cos(log((sin(1)-(X/X)))))-cos(1)))*log((sin(X)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((1*X)*log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((cos(X)-sin((log(1)-cos(sin(((cos(1)/(X-X))/((X+X)+log(X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((cos(X)-sin((log(X)-cos(sin(((cos(1)/(X-X))/((X+X)+log(X)))))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(1)/log(1))-(sin(X)-log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((((((log(1)/(X/1))/((1*1)*cos(1)))+(1/X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(log(1)))+sin(1))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((X-1))+((X*X)*sin(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos(X)*log(X))-sin((X-X)))/sin((log(1)+((1*X)/sin(sin(log(((X-1)*(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin(log(log(log((X-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log((sin(1)-(X/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(log(cos((1-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((cos(log((sin(1)-(X/X))))/((sin(1)*log(1))/cos((1/X))))*log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(log((log(1)/(X*X))))/log(1))*(sin(X)-log(1)))*((((1/1)+(1/X))/cos(log(1)))+(X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((log(X)-cos((log(X)+((1*X)-(log((1+1))+(X*X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log(1))/cos((1/X))))*log(log((log(X)-cos((log(1)+((1*X)-(log((1+1))+(X*X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(cos(X)))+cos(cos(1)))-log(log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log((log(X)+log(cos(1))))-(log((cos((X-1))*((cos((1*X))*log(1))-sin((X*1)))))*sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((1-1)*(1/1))))/cos(sin((X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((X-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(X/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/cos(log(log((X-1)))))+cos(cos(1)))-log(log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(log(1))*log(((X-1)-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((X*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/cos(log(log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(log(1))*log(((((cos(X)*sin(1))*sin((X-X)))*(1/X))-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(1)/(X+X))/((cos(X)*log(1))*sin((sin(1)+sin(log((log(1)/(X*X)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((sin(1)/(X-X))+(log(1)/(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*X)))/log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((cos(1)*log(((1-1)-log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/X)+(1/X))/log(((1*1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log(sin(X))+sin((cos(1)/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(sin(log(log((log(X)-cos((log(1)+((1*X)-((cos(1)/log(1))*(log(log(X))+sin(((1*X)*sin(log(1)))))))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*(cos(1)-cos(1)))*((X-1)+(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((log(sin(X))+sin((1*X)))*(X/X)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((sin(((1-X)*(1*X)))-sin((log(X)-cos(1)))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((log(sin(X))+sin((X*X)))*(X/X)))/log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log((X/X)))/log(log(((((X/X)+(1/X))/log(((X*1)-cos(1))))+cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/cos(cos(1)))+cos(cos(1)))-log(log(log(cos(sin((X-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((((((log(1)/(X/1))/((1*1)*log(cos(X))))+(1+X))/cos(log(1)))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(log((log(X)-cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((1-X)*(1*1)))/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(X))+sin(log((X/X))))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(1)/((sin(1)*log((X/X)))/log(sin(cos(X)))))*cos(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(1)/(X/X))*(1+X))+(((1-1)/(1-1))-cos(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(1)/log(1))*(log(log(X))+sin(((1*X)*cos((X-X))))))*((((cos(X)*log(1))-sin((X*X)))/(1/X))+(cos(sin(X))/(X-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(sin(((cos(1)+(X-X))/((X+X)+log(X)))))-sin(log((log(1)/(((X-1)-(X*X))-(X*X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(log(log(log(log((log(log(X))+sin(((1*X)/log(log(1))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-sin(log(sin((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(1)/cos(log(log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(((cos(1)/(X-X))/((X+X)+log(X))))/log(cos(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(log(((X-1)*(X*X))))/log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin(log(log(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin((X-X))*log(1))-sin((X*1)))/sin((log(1)/(X*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))+log((X+1)))/log(sin(cos(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(((((X/1)+(1/X))/log(((X/1)-cos(1))))+cos(cos(1)))-log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}"
