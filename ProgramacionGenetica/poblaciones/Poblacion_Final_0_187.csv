,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99
0,"{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(1-1))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(1))*cos((1+1)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log((X-1)))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1+1)-(X-1))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(log(sin(1)))))-sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))/(log(log(X))-log(sin(1))))-(log((X-1))+log(cos((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(log(sin((log(log(X))+((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(log(X))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))-(1*1)))-(log((X-1))/cos(sin(log(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos((cos(1)-log(X)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((cos(log(log(X)))/log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log(X))))-(cos(sin(X))/log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((((X-X)+(sin(sin(log(log(1))))-(1/X)))+log(log(X)))/(sin((X*X))+((1*X)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((sin(1)*sin(1))*cos((1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*sin(log((1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((1+1)/(cos(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((1-X)+(1/X))-log(log(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(1)/(log(log(X))-log(log(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log(X))))-(X+1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(cos(X))/(log(log(X))-log(log(1))))-((cos(1)+cos(1))-((1+1)*log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1+1)))*cos(((cos(sin(1))*(((X+1)*(X+X))*sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((sin(X)-(cos(1)+cos(1)))*log(X)))))-(sin(log(1))-log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)*((log(1)*log(X))*log((cos(1)-(1*1)))))*log((1-1)))/cos(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((X-X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(1)-(1*1)))*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))*((1*X)/sin(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1-1)))*log((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log(1))*sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))*((1-X)-(1/X)))/sin(log((sin(1)/(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((1*1)+log(log(1)))/(sin((X*X))+((1*X)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)-(X+1)))*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)-log((log(X)-cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((X-1)))*sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(1)))-log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((log(1)/log(1)))/sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((X+1)*log(X)))))-(sin(log(1))-log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((cos(log(log(X)))*(log(1)*log(1))))/(cos(X)-(1+X)))-((log(1)-cos(1))-(X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(cos(log((sin(cos(1))*log(1)))))*(log(cos(X))*log(log(X))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((cos(log((1-1)))-log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log(log(X)))-(1+1)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((X*X)-sin(1))-sin(X))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((sin(log(log(1)))*(log((X-1))/log(sin(1))))/(log(X)-(X+1)))-cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((log(1)/sin(X)))/sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-(X-X))', 'y_predict': [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(1)))-sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((sin(X)-(1*1))*log(X)))))-(sin(log(1))-log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)+(log(X)-(X*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))/(log(log(X))-log(sin(1))))-(log((X-1))+cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1*1)*log(1))-(sin(X)/(X*1)))*log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((log((X-1))/cos(log(1)))*cos((1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*cos(X)))/cos(log(sin((log(log(X))+((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)/(cos(sin(1))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((X-X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(1)/(log(log(X))-log(log(1))))-(log((X-1))/sin(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)-(1*1)))*log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(1)+cos(1))-((1*1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(1)))-cos(sin((1+X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(X)+cos(1))-((1*1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(1)+(cos(log(sin(log(log(sin(1))))))/log(sin(1))))*(log(X)-(X+1)))-cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((log(log(1))-log(sin(1)))))*cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(sin(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(log(log(X)))/(1-1))-(log((sin(log(log(1)))*(log((X+1))/log(sin(1)))))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(cos(X))/(log(log(X))-log(log(1))))-((cos(1)+cos(1))-(X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))*(1*1)))-(log((X-1))/cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1*1)*log(1))-(sin(X)/(1*1)))*sin(sin(log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(X))-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos((cos(1)-log(X)))/sin(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(cos(X)-(1-1)))-((cos(X)/cos(sin(1)))-((1+1)+sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin(log(cos(1)))-log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))+(sin(cos(log(1)))-(1+X)))-((log(1)+cos(1))-(X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(1))*cos((1+1)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(sin(X))/(X+1))/log(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*cos(X)))/cos(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/((X-1)-(1-1)))-(log((log(1)/sin(X)))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(log(log(1)))))-sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log((X-1)))))-(cos((X-X))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((log(log(1))-log(1))))*cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log(log(X)))-(1+1)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((X-1)-(log((X-1))+cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X+1)/cos(log(sin(X))))*log((X-X)))-sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((1-1))/(log(X)-(X/X)))-(1/1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))+(cos(X)-(1/X)))-((log(X)+sin(cos(1)))-((1*1)/log(log((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1))))))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))*((1-X)*(1/X)))/log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(sin(X)))*(log(1)*log(1)))/cos(cos(sin((log(log(X))+((1*X)/sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(X)-(X+1)))*log(log((1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(((X/1)-log(X))-(log(X)-(X*1))))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1+1)))*sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(1))*cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1/1)))*cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X+1)/sin(X))*log((X-X)))-log((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(cos(sin((log(log(X))+((X*X)/sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(1)*((log(log(1))*log(X))-log((1+X))))*log((1/X)))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(log(log(1)))*log(log(X))))-(X+1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((((X-X)+(sin(sin(log(log(1))))-(1/X)))+log(log(X)))/(sin((X*X))+((sin(log(log(1)))*(log((X+1))/log(sin(1))))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(1))-(cos(log((1-1)))*log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log((log(log(1))-log(sin(1)))))/((X-1)-(1-1)))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(1-1))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}"
1,"{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(1-1))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(1))*cos((1+1)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log((X-1)))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1+1)-(X-1))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(log(sin(1)))))-sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))/(log(log(X))-log(sin(1))))-(log((X-1))+log(cos((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(log(sin((log(log(X))+((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(log(X))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))-(1*1)))-(log((X-1))/cos(sin(log(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos((cos(1)-log(X)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((cos(log(log(X)))/log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log(X))))-(cos(sin(X))/log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((((X-X)+(sin(sin(log(log(1))))-(1/X)))+log(log(X)))/(sin((X*X))+((1*X)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((sin(1)*sin(1))*cos((1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*sin(log((1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((1+1)/(cos(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((1-X)+(1/X))-log(log(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(1)/(log(log(X))-log(log(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log(X))))-(X+1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(cos(X))/(log(log(X))-log(log(1))))-((cos(1)+cos(1))-((1+1)*log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1+1)))*cos(((cos(sin(1))*(((X+1)*(X+X))*sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((sin(X)-(cos(1)+cos(1)))*log(X)))))-(sin(log(1))-log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)*((log(1)*log(X))*log((cos(1)-(1*1)))))*log((1-1)))/cos(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((X-X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(1)-(1*1)))*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))*((1*X)/sin(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1-1)))*log((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log(1))*sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))*((1-X)-(1/X)))/sin(log((sin(1)/(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((1*1)+log(log(1)))/(sin((X*X))+((1*X)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)-(X+1)))*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)-log((log(X)-cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((X-1)))*sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(1)))-log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((log(1)/log(1)))/sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((X+1)*log(X)))))-(sin(log(1))-log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((cos(log(log(X)))*(log(1)*log(1))))/(cos(X)-(1+X)))-((log(1)-cos(1))-(X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(cos(log((sin(cos(1))*log(1)))))*(log(cos(X))*log(log(X))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((cos(log((1-1)))-log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log(log(X)))-(1+1)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((X*X)-sin(1))-sin(X))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((sin(log(log(1)))*(log((X-1))/log(sin(1))))/(log(X)-(X+1)))-cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((log(1)/sin(X)))/sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-(X-X))', 'y_predict': [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(1)))-sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((sin(X)-(1*1))*log(X)))))-(sin(log(1))-log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)+(log(X)-(X*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))/(log(log(X))-log(sin(1))))-(log((X-1))+cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1*1)*log(1))-(sin(X)/(X*1)))*log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((log((X-1))/cos(log(1)))*cos((1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*cos(X)))/cos(log(sin((log(log(X))+((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)/(cos(sin(1))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((X-X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(1)/(log(log(X))-log(log(1))))-(log((X-1))/sin(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)-(1*1)))*log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(1)+cos(1))-((1*1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(1)))-cos(sin((1+X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(X)+cos(1))-((1*1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(1)+(cos(log(sin(log(log(sin(1))))))/log(sin(1))))*(log(X)-(X+1)))-cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((log(log(1))-log(sin(1)))))*cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(sin(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(log(log(X)))/(1-1))-(log((sin(log(log(1)))*(log((X+1))/log(sin(1)))))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(cos(X))/(log(log(X))-log(log(1))))-((cos(1)+cos(1))-(X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))*(1*1)))-(log((X-1))/cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1*1)*log(1))-(sin(X)/(1*1)))*sin(sin(log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(X))-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos((cos(1)-log(X)))/sin(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(cos(X)-(1-1)))-((cos(X)/cos(sin(1)))-((1+1)+sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin(log(cos(1)))-log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))+(sin(cos(log(1)))-(1+X)))-((log(1)+cos(1))-(X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(1))*cos((1+1)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(sin(X))/(X+1))/log(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*cos(X)))/cos(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/((X-1)-(1-1)))-(log((log(1)/sin(X)))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(log(log(1)))))-sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log((X-1)))))-(cos((X-X))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((log(log(1))-log(1))))*cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log(log(X)))-(1+1)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((X-1)-(log((X-1))+cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X+1)/cos(log(sin(X))))*log((X-X)))-sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((1-1))/(log(X)-(X/X)))-(1/1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))+(cos(X)-(1/X)))-((log(X)+sin(cos(1)))-((1*1)/log(log((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1))))))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))*((1-X)*(1/X)))/log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(sin(X)))*(log(1)*log(1)))/cos(cos(sin((log(log(X))+((1*X)/sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(X)-(X+1)))*log(log((1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(((X/1)-log(X))-(log(X)-(X*1))))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1+1)))*sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(1))*cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1/1)))*cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X+1)/sin(X))*log((X-X)))-log((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(cos(sin((log(log(X))+((X*X)/sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(1)*((log(log(1))*log(X))-log((1+X))))*log((1/X)))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(log(log(1)))*log(log(X))))-(X+1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((((X-X)+(sin(sin(log(log(1))))-(1/X)))+log(log(X)))/(sin((X*X))+((sin(log(log(1)))*(log((X+1))/log(sin(1))))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(1))-(cos(log((1-1)))*log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log((log(log(1))-log(sin(1)))))/((X-1)-(1-1)))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(1-1))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}"
2,"{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(1-1))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(1))*cos((1+1)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log((X-1)))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1+1)-(X-1))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(log(sin(1)))))-sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))/(log(log(X))-log(sin(1))))-(log((X-1))+log(cos((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(log(sin((log(log(X))+((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(log(X))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))-(1*1)))-(log((X-1))/cos(sin(log(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos((cos(1)-log(X)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((cos(log(log(X)))/log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log(X))))-(cos(sin(X))/log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((((X-X)+(sin(sin(log(log(1))))-(1/X)))+log(log(X)))/(sin((X*X))+((1*X)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((sin(1)*sin(1))*cos((1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*sin(log((1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((1+1)/(cos(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((1-X)+(1/X))-log(log(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(1)/(log(log(X))-log(log(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log(X))))-(X+1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(cos(X))/(log(log(X))-log(log(1))))-((cos(1)+cos(1))-((1+1)*log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1+1)))*cos(((cos(sin(1))*(((X+1)*(X+X))*sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((sin(X)-(cos(1)+cos(1)))*log(X)))))-(sin(log(1))-log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)*((log(1)*log(X))*log((cos(1)-(1*1)))))*log((1-1)))/cos(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((X-X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(1)-(1*1)))*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))*((1*X)/sin(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1-1)))*log((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log(1))*sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))*((1-X)-(1/X)))/sin(log((sin(1)/(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((1*1)+log(log(1)))/(sin((X*X))+((1*X)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)-(X+1)))*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)-log((log(X)-cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((X-1)))*sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(1)))-log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((log(1)/log(1)))/sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((X+1)*log(X)))))-(sin(log(1))-log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((cos(log(log(X)))*(log(1)*log(1))))/(cos(X)-(1+X)))-((log(1)-cos(1))-(X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(cos(log((sin(cos(1))*log(1)))))*(log(cos(X))*log(log(X))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((cos(log((1-1)))-log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log(log(X)))-(1+1)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((X*X)-sin(1))-sin(X))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((sin(log(log(1)))*(log((X-1))/log(sin(1))))/(log(X)-(X+1)))-cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((log(1)/sin(X)))/sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-(X-X))', 'y_predict': [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(1)))-sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((sin(X)-(1*1))*log(X)))))-(sin(log(1))-log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)+(log(X)-(X*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))/(log(log(X))-log(sin(1))))-(log((X-1))+cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1*1)*log(1))-(sin(X)/(X*1)))*log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((log((X-1))/cos(log(1)))*cos((1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*cos(X)))/cos(log(sin((log(log(X))+((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)/(cos(sin(1))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((X-X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(1)/(log(log(X))-log(log(1))))-(log((X-1))/sin(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)-(1*1)))*log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(1)+cos(1))-((1*1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(1)))-cos(sin((1+X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(X)+cos(1))-((1*1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(1)+(cos(log(sin(log(log(sin(1))))))/log(sin(1))))*(log(X)-(X+1)))-cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((log(log(1))-log(sin(1)))))*cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(sin(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(log(log(X)))/(1-1))-(log((sin(log(log(1)))*(log((X+1))/log(sin(1)))))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(cos(X))/(log(log(X))-log(log(1))))-((cos(1)+cos(1))-(X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))*(1*1)))-(log((X-1))/cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1*1)*log(1))-(sin(X)/(1*1)))*sin(sin(log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(X))-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos((cos(1)-log(X)))/sin(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(cos(X)-(1-1)))-((cos(X)/cos(sin(1)))-((1+1)+sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin(log(cos(1)))-log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))+(sin(cos(log(1)))-(1+X)))-((log(1)+cos(1))-(X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(1))*cos((1+1)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(sin(X))/(X+1))/log(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*cos(X)))/cos(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/((X-1)-(1-1)))-(log((log(1)/sin(X)))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(log(log(1)))))-sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log((X-1)))))-(cos((X-X))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((log(log(1))-log(1))))*cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log(log(X)))-(1+1)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((X-1)-(log((X-1))+cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X+1)/cos(log(sin(X))))*log((X-X)))-sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((1-1))/(log(X)-(X/X)))-(1/1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))+(cos(X)-(1/X)))-((log(X)+sin(cos(1)))-((1*1)/log(log((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1))))))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))*((1-X)*(1/X)))/log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(sin(X)))*(log(1)*log(1)))/cos(cos(sin((log(log(X))+((1*X)/sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(X)-(X+1)))*log(log((1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(((X/1)-log(X))-(log(X)-(X*1))))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1+1)))*sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(1))*cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1/1)))*cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X+1)/sin(X))*log((X-X)))-log((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(cos(sin((log(log(X))+((X*X)/sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(1)*((log(log(1))*log(X))-log((1+X))))*log((1/X)))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(log(log(1)))*log(log(X))))-(X+1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((((X-X)+(sin(sin(log(log(1))))-(1/X)))+log(log(X)))/(sin((X*X))+((sin(log(log(1)))*(log((X+1))/log(sin(1))))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(1))-(cos(log((1-1)))*log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log((log(log(1))-log(sin(1)))))/((X-1)-(1-1)))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(1-1))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}"
3,"{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(1-1))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(1))*cos((1+1)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log((X-1)))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1+1)-(X-1))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(log(sin(1)))))-sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))/(log(log(X))-log(sin(1))))-(log((X-1))+log(cos((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(log(sin((log(log(X))+((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(log(X))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))-(1*1)))-(log((X-1))/cos(sin(log(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos((cos(1)-log(X)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((cos(log(log(X)))/log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log(X))))-(cos(sin(X))/log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((((X-X)+(sin(sin(log(log(1))))-(1/X)))+log(log(X)))/(sin((X*X))+((1*X)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((sin(1)*sin(1))*cos((1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*sin(log((1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((1+1)/(cos(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((1-X)+(1/X))-log(log(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(1)/(log(log(X))-log(log(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log(X))))-(X+1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(cos(X))/(log(log(X))-log(log(1))))-((cos(1)+cos(1))-((1+1)*log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1+1)))*cos(((cos(sin(1))*(((X+1)*(X+X))*sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((sin(X)-(cos(1)+cos(1)))*log(X)))))-(sin(log(1))-log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)*((log(1)*log(X))*log((cos(1)-(1*1)))))*log((1-1)))/cos(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((X-X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(1)-(1*1)))*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))*((1*X)/sin(1))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1-1)))*log((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log(1))*sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))*((1-X)-(1/X)))/sin(log((sin(1)/(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((1*1)+log(log(1)))/(sin((X*X))+((1*X)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)-(X+1)))*log(log((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)-log((log(X)-cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((X-1)))*sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(1)))-log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((log(1)/log(1)))/sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((X+1)*log(X)))))-(sin(log(1))-log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((cos(log(log(X)))*(log(1)*log(1))))/(cos(X)-(1+X)))-((log(1)-cos(1))-(X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(cos(log((sin(cos(1))*log(1)))))*(log(cos(X))*log(log(X))))-(log((X-1))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((cos(log((1-1)))-log(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log(log(X)))-(1+1)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((X*X)-sin(1))-sin(X))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((sin(log(log(1)))*(log((X-1))/log(sin(1))))/(log(X)-(X+1)))-cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((log(1)/sin(X)))/sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log((1*1)))-(X-X))', 'y_predict': [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(1)))-sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(sin((log(log(X))+((sin(X)-(1*1))*log(X)))))-(sin(log(1))-log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)+(log(X)-(X*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))/(log(log(X))-log(sin(1))))-(log((X-1))+cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1*1)*log(1))-(sin(X)/(X*1)))*log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((log((X-1))/cos(log(1)))*cos((1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*cos(X)))/cos(log(sin((log(log(X))+((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)/(cos(sin(1))/log(sin(1))))*(log(X)-(X+1)))-log(log(1))))))+(sin(1)+sin(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((X-X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(1)/(log(log(X))-log(log(1))))-(log((X-1))/sin(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)-(1*1)))*log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(1)+cos(1))-((1*1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(1)))-cos(sin((1+X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log((sin(1)-(1*1))))+(1/X)))-((log(X)+cos(1))-((1*1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(1)+(cos(log(sin(log(log(sin(1))))))/log(sin(1))))*(log(X)-(X+1)))-cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((log(log(1))-log(sin(1)))))*cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(sin(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(log(log(X)))/(1-1))-(log((sin(log(log(1)))*(log((X+1))/log(sin(1)))))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(cos(X))/(log(log(X))-log(log(1))))-((cos(1)+cos(1))-(X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/(((X/1)-log(1))*(1*1)))-(log((X-1))/cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1*1)*log(1))-(sin(X)/(1*1)))*sin(sin(log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(X))-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos((cos(1)-log(X)))/sin(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(cos(X)-(1-1)))-((cos(X)/cos(sin(1)))-((1+1)+sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin(log(cos(1)))-log(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))+(sin(cos(log(1)))-(1+X)))-((log(1)+cos(1))-(X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(1))*cos((1+1)))/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(sin(X))/(X+1))/log(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*cos(X)))/cos(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))/((X-1)-(1-1)))-(log((log(1)/sin(X)))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(log(log(log(1)))))-sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(cos(X))*log(log((X-1)))))-(cos((X-X))/cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((log(log(1))-log(1))))*cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))/(log(log(log(X)))-(1+1)))-((log(1)+cos(1))-((1/1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((X-1)-(log((X-1))+cos(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X+1)/cos(log(sin(X))))*log((X-X)))-sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((1-1))/(log(X)-(X/X)))-(1/1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((log((X-1))+(cos(X)-(1/X)))-((log(X)+sin(cos(1)))-((1*1)/log(log((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(log(cos(((cos(sin(1))*(((X+1)*(1+X))-sin((((log(1)*(cos(sin(X))/log(sin(1))))*(log(X)-(X+1)))-sin(log(1))))))+(sin(1)+sin(1))))))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))*((1-X)*(1/X)))/log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(sin(X)))*(log(1)*log(1)))/cos(cos(sin((log(log(X))+((1*X)/sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(X)-(X+1)))*log(log((1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(((X/1)-log(X))-(log(X)-(X*1))))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1+1)))*sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(1))*cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(log((1/1)))*cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X+1)/sin(X))*log((X-X)))-log((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(X)))*(log(1)*log(1)))/cos(cos(sin((log(log(X))+((X*X)/sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(1)*((log(log(1))*log(X))-log((1+X))))*log((1/X)))-log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(1))*(log(log(log(1)))*log(log(X))))-(X+1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(/), 'expresion': '((((X-X)+(sin(sin(log(log(1))))-(1/X)))+log(log(X)))/(sin((X*X))+((sin(log(log(1)))*(log((X+1))/log(sin(1))))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(1))-(cos(log((1-1)))*log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log((log(log(1))-log(sin(1)))))/((X-1)-(1-1)))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(log(X)))/(1-1))-(log((X-1))/cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(2.6863), 'isValida': True}"
