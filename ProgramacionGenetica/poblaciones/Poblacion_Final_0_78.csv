,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99
0,"{'tree': Node(log), 'expresion': 'log(log(((sin(cos(X))/log(1))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((X-1)/(X-1))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((1-X)+log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(cos(((log(1)*(1/1))*((1*1)*cos(X)))))-(1-1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*sin(X))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/(log(X)+(cos(X)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(sin(log(1)))-cos(1))+(log(log(X))+(X+X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log((X-1)))/(log(X)+log(X)))+log(1))/(1-1))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/log(1))+log(log(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(sin(log(X)))-sin(1))+(sin(log(X))*(X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X-X))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(log((((1+X)*cos(X))+sin(X)))*cos((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(1-1)))*(((X*1)*(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*log((log(cos(cos(1)))-(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos(1)/(log(X)/(log(cos(cos(1)))/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((X-1)-((X+X)+cos(sin(1)))))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin((log(log((log(cos(log(X)))+(X/1))))-log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(sin(((log((X-X))+log(X))/log(cos(X)))))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)-cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((((1+X)*cos(X))*cos(X))+sin(X)))*log(((cos(X)*(X/X))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/(log(1)*(sin(((log(X)+log(X))/log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(1-1)))*(((X*1)*(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)+log(X)))+cos(1))/(log(X)+log(1)))+cos((log(log(cos(X)))+(cos(1)+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*log(cos(X)))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(X)))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((1*X)/(sin(X)+log(X)))+cos(1))/(sin(X)+sin(X)))+cos((cos(log(log(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((X-X))+log(((sin(X)+cos((cos(X)-log(1))))+sin(X))))+cos(((1*X)*(cos(1)-cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(((log(log(X))*(X/X))/log(X)))+cos(1)))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(log(log(X)))-(((log(1)+(X-1))*cos(1))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log((X/1)))-(1*X))-((cos(X)/(1-1))-log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(1)+(1-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(cos(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((log(cos(cos(1)))-(X/X))*cos(X))+sin(X)))*log(((cos(X)*(X/X))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/sin(X))/(log(X)+cos(X)))+sin(1))/(1+1))+log((log(log(log(1)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/log(1))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(1)))+log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)/(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+log((log(cos(cos(1)))-(X/X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)+(1-1)))*log(((log(X)*(X-X))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)+log(X)))+log((X-X)))/(log(X)+log(1)))+cos((log(log(cos(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log((X/1)))-(1*X))-(sin(1)/log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/sin(log(X)))))+log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(1)))*log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((((1+X)*cos(X))+log(sin((((log(X)*(1-X))-sin(X))*((1*1)/cos(X)))))))*cos((X-1)))+cos((X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/(cos(1)*(cos(sin(((log(X)+log(1))*log(log(X)))))/log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((cos(1)+(X-1)))/sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X*1))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(log(X)-cos((log(sin(cos(X)))*(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X-X))-(sin(1)+cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((((1+X)*cos(X))*cos(X))+log(X)))*log(((cos(X)*(X/1))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(X)+log((log(sin(X))-(X/X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(X)+cos(1))+(log(log(1))*(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)+(1-1)))*log(((log(X)*(X-X))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/sin(X))/(log(X)/log(X)))+log(1))/(1-1))+log((log(cos(X))+(cos(1)+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(log(log(1)))-(((log(1)+(X-1))*cos(1))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+X))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log(((log(X)+log(1))*log(sin(1)))))-(((log(1)+(1-1))*sin(X))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((1/X)*cos(X))+sin(X)))*log(((cos(X)*(cos(X)*(1*1)))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/cos(X))/(sin(X)+cos((cos(X)-log(1)))))+cos(1))/(sin(X)+log(1)))+cos((log(log(log(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(log(cos(1)))-(X/X))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((cos(X)/log(1))))-((log(X)/(cos(1)*(1*1)))+sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(((log((log(cos(log(X)))+(X/1)))*(1-X))-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/cos(((1/X)/(X-X))))))+log((log(log(X))*(1/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(sin(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((1/X)*cos(X))+sin(X)))*log(((cos(X)*((log(X)*(1-X))*sin(X)))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin((log(log((X/1)))*log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(1*1))-(log(sin(log(X)))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(sin(((log(X)+log(X))/log(cos(X)))))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/cos(((1/X)/(X-X))))))+log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(1)))+(X-1)))*(((X*1)/(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(X)))+log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(1)*(log(1)+(X-1)))-(sin(1)+sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-X))/cos(sin(((log(X)+log(1))*log(log(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(log(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((cos(1)+(X-1)))+cos(((X+X)+sin(X))))+cos(((X*X)*(cos((log(log((X-1)))-(X/1)))-cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(cos(X))+cos(1))+(log(log(X))+(X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(sin(log(((sin(X)/cos(cos(X)))+cos(log((X-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)/log(X)))+cos(1))/(log(X)+log(1)))+cos((log(log(cos(X)))+(log((log(log(log(X)))+(X/X)))+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((X-1)-((X+X)/cos(sin(1)))))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*log(cos(1)))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((log(1)/log(1))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((log((log(1)+(X-1)))+cos(((X+X)+sin(X)))))*cos((X-1)))+cos((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}"
1,"{'tree': Node(log), 'expresion': 'log(log(((sin(cos(X))/log(1))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((X-1)/(X-1))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((1-X)+log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(cos(((log(1)*(1/1))*((1*1)*cos(X)))))-(1-1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*sin(X))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/(log(X)+(cos(X)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(sin(log(1)))-cos(1))+(log(log(X))+(X+X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log((X-1)))/(log(X)+log(X)))+log(1))/(1-1))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/log(1))+log(log(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(sin(log(X)))-sin(1))+(sin(log(X))*(X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X-X))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(log((((1+X)*cos(X))+sin(X)))*cos((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(1-1)))*(((X*1)*(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*log((log(cos(cos(1)))-(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos(1)/(log(X)/(log(cos(cos(1)))/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((X-1)-((X+X)+cos(sin(1)))))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin((log(log((log(cos(log(X)))+(X/1))))-log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(sin(((log((X-X))+log(X))/log(cos(X)))))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)-cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((((1+X)*cos(X))*cos(X))+sin(X)))*log(((cos(X)*(X/X))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/(log(1)*(sin(((log(X)+log(X))/log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(1-1)))*(((X*1)*(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)+log(X)))+cos(1))/(log(X)+log(1)))+cos((log(log(cos(X)))+(cos(1)+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*log(cos(X)))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(X)))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((1*X)/(sin(X)+log(X)))+cos(1))/(sin(X)+sin(X)))+cos((cos(log(log(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((X-X))+log(((sin(X)+cos((cos(X)-log(1))))+sin(X))))+cos(((1*X)*(cos(1)-cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(((log(log(X))*(X/X))/log(X)))+cos(1)))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(log(log(X)))-(((log(1)+(X-1))*cos(1))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log((X/1)))-(1*X))-((cos(X)/(1-1))-log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(1)+(1-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(cos(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((log(cos(cos(1)))-(X/X))*cos(X))+sin(X)))*log(((cos(X)*(X/X))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/sin(X))/(log(X)+cos(X)))+sin(1))/(1+1))+log((log(log(log(1)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/log(1))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(1)))+log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)/(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+log((log(cos(cos(1)))-(X/X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)+(1-1)))*log(((log(X)*(X-X))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)+log(X)))+log((X-X)))/(log(X)+log(1)))+cos((log(log(cos(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log((X/1)))-(1*X))-(sin(1)/log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/sin(log(X)))))+log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(1)))*log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((((1+X)*cos(X))+log(sin((((log(X)*(1-X))-sin(X))*((1*1)/cos(X)))))))*cos((X-1)))+cos((X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/(cos(1)*(cos(sin(((log(X)+log(1))*log(log(X)))))/log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((cos(1)+(X-1)))/sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X*1))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(log(X)-cos((log(sin(cos(X)))*(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X-X))-(sin(1)+cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((((1+X)*cos(X))*cos(X))+log(X)))*log(((cos(X)*(X/1))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(X)+log((log(sin(X))-(X/X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(X)+cos(1))+(log(log(1))*(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)+(1-1)))*log(((log(X)*(X-X))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/sin(X))/(log(X)/log(X)))+log(1))/(1-1))+log((log(cos(X))+(cos(1)+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(log(log(1)))-(((log(1)+(X-1))*cos(1))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+X))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log(((log(X)+log(1))*log(sin(1)))))-(((log(1)+(1-1))*sin(X))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((1/X)*cos(X))+sin(X)))*log(((cos(X)*(cos(X)*(1*1)))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/cos(X))/(sin(X)+cos((cos(X)-log(1)))))+cos(1))/(sin(X)+log(1)))+cos((log(log(log(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(log(cos(1)))-(X/X))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((cos(X)/log(1))))-((log(X)/(cos(1)*(1*1)))+sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(((log((log(cos(log(X)))+(X/1)))*(1-X))-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/cos(((1/X)/(X-X))))))+log((log(log(X))*(1/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(sin(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((1/X)*cos(X))+sin(X)))*log(((cos(X)*((log(X)*(1-X))*sin(X)))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin((log(log((X/1)))*log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(1*1))-(log(sin(log(X)))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(sin(((log(X)+log(X))/log(cos(X)))))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/cos(((1/X)/(X-X))))))+log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(1)))+(X-1)))*(((X*1)/(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(X)))+log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(1)*(log(1)+(X-1)))-(sin(1)+sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-X))/cos(sin(((log(X)+log(1))*log(log(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(log(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((cos(1)+(X-1)))+cos(((X+X)+sin(X))))+cos(((X*X)*(cos((log(log((X-1)))-(X/1)))-cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(cos(X))+cos(1))+(log(log(X))+(X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(sin(log(((sin(X)/cos(cos(X)))+cos(log((X-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)/log(X)))+cos(1))/(log(X)+log(1)))+cos((log(log(cos(X)))+(log((log(log(log(X)))+(X/X)))+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((X-1)-((X+X)/cos(sin(1)))))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*log(cos(1)))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((log(1)/log(1))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((log((log(1)+(X-1)))+cos(((X+X)+sin(X)))))*cos((X-1)))+cos((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}"
2,"{'tree': Node(log), 'expresion': 'log(log(((sin(cos(X))/log(1))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((X-1)/(X-1))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((1-X)+log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(cos(((log(1)*(1/1))*((1*1)*cos(X)))))-(1-1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*sin(X))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/(log(X)+(cos(X)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(sin(log(1)))-cos(1))+(log(log(X))+(X+X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log((X-1)))/(log(X)+log(X)))+log(1))/(1-1))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/log(1))+log(log(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(sin(log(X)))-sin(1))+(sin(log(X))*(X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X-X))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(log((((1+X)*cos(X))+sin(X)))*cos((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(1-1)))*(((X*1)*(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*log((log(cos(cos(1)))-(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos(1)/(log(X)/(log(cos(cos(1)))/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((X-1)-((X+X)+cos(sin(1)))))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin((log(log((log(cos(log(X)))+(X/1))))-log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(sin(((log((X-X))+log(X))/log(cos(X)))))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)-cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((((1+X)*cos(X))*cos(X))+sin(X)))*log(((cos(X)*(X/X))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/(log(1)*(sin(((log(X)+log(X))/log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(1-1)))*(((X*1)*(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)+log(X)))+cos(1))/(log(X)+log(1)))+cos((log(log(cos(X)))+(cos(1)+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*log(cos(X)))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(X)))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((1*X)/(sin(X)+log(X)))+cos(1))/(sin(X)+sin(X)))+cos((cos(log(log(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((X-X))+log(((sin(X)+cos((cos(X)-log(1))))+sin(X))))+cos(((1*X)*(cos(1)-cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(((log(log(X))*(X/X))/log(X)))+cos(1)))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(log(log(X)))-(((log(1)+(X-1))*cos(1))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log((X/1)))-(1*X))-((cos(X)/(1-1))-log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(1)+(1-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(cos(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((log(cos(cos(1)))-(X/X))*cos(X))+sin(X)))*log(((cos(X)*(X/X))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/sin(X))/(log(X)+cos(X)))+sin(1))/(1+1))+log((log(log(log(1)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/log(1))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(1)))+log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)/(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+log((log(cos(cos(1)))-(X/X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)+(1-1)))*log(((log(X)*(X-X))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)+log(X)))+log((X-X)))/(log(X)+log(1)))+cos((log(log(cos(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log((X/1)))-(1*X))-(sin(1)/log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/sin(log(X)))))+log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(1)))*log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((((1+X)*cos(X))+log(sin((((log(X)*(1-X))-sin(X))*((1*1)/cos(X)))))))*cos((X-1)))+cos((X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/(cos(1)*(cos(sin(((log(X)+log(1))*log(log(X)))))/log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((cos(1)+(X-1)))/sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X*1))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(log(X)-cos((log(sin(cos(X)))*(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X-X))-(sin(1)+cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((((1+X)*cos(X))*cos(X))+log(X)))*log(((cos(X)*(X/1))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(X)+log((log(sin(X))-(X/X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(X)+cos(1))+(log(log(1))*(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)+(1-1)))*log(((log(X)*(X-X))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/sin(X))/(log(X)/log(X)))+log(1))/(1-1))+log((log(cos(X))+(cos(1)+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(log(log(1)))-(((log(1)+(X-1))*cos(1))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+X))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log(((log(X)+log(1))*log(sin(1)))))-(((log(1)+(1-1))*sin(X))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((1/X)*cos(X))+sin(X)))*log(((cos(X)*(cos(X)*(1*1)))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/cos(X))/(sin(X)+cos((cos(X)-log(1)))))+cos(1))/(sin(X)+log(1)))+cos((log(log(log(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(log(cos(1)))-(X/X))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((cos(X)/log(1))))-((log(X)/(cos(1)*(1*1)))+sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(((log((log(cos(log(X)))+(X/1)))*(1-X))-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/cos(((1/X)/(X-X))))))+log((log(log(X))*(1/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(sin(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((1/X)*cos(X))+sin(X)))*log(((cos(X)*((log(X)*(1-X))*sin(X)))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin((log(log((X/1)))*log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(1*1))-(log(sin(log(X)))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(sin(((log(X)+log(X))/log(cos(X)))))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/cos(((1/X)/(X-X))))))+log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(1)))+(X-1)))*(((X*1)/(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(X)))+log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(1)*(log(1)+(X-1)))-(sin(1)+sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-X))/cos(sin(((log(X)+log(1))*log(log(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(log(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((cos(1)+(X-1)))+cos(((X+X)+sin(X))))+cos(((X*X)*(cos((log(log((X-1)))-(X/1)))-cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(cos(X))+cos(1))+(log(log(X))+(X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(sin(log(((sin(X)/cos(cos(X)))+cos(log((X-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)/log(X)))+cos(1))/(log(X)+log(1)))+cos((log(log(cos(X)))+(log((log(log(log(X)))+(X/X)))+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((X-1)-((X+X)/cos(sin(1)))))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*log(cos(1)))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((log(1)/log(1))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((log((log(1)+(X-1)))+cos(((X+X)+sin(X)))))*cos((X-1)))+cos((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}"
3,"{'tree': Node(log), 'expresion': 'log(log(((sin(cos(X))/log(1))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((X-1)/(X-1))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((1-X)+log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(cos(((log(1)*(1/1))*((1*1)*cos(X)))))-(1-1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*sin(X))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/(log(X)+(cos(X)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(sin(log(1)))-cos(1))+(log(log(X))+(X+X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log((X-1)))/(log(X)+log(X)))+log(1))/(1-1))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/log(1))+log(log(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(sin(log(X)))-sin(1))+(sin(log(X))*(X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X-X))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(log((((1+X)*cos(X))+sin(X)))*cos((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(1-1)))*(((X*1)*(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*log((log(cos(cos(1)))-(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos(1)/(log(X)/(log(cos(cos(1)))/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((X-1)-((X+X)+cos(sin(1)))))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin((log(log((log(cos(log(X)))+(X/1))))-log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(sin(((log((X-X))+log(X))/log(cos(X)))))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)-cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((((1+X)*cos(X))*cos(X))+sin(X)))*log(((cos(X)*(X/X))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/(log(1)*(sin(((log(X)+log(X))/log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(1-1)))*(((X*1)*(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)+log(X)))+cos(1))/(log(X)+log(1)))+cos((log(log(cos(X)))+(cos(1)+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*log(cos(X)))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(X)))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((1*X)/(sin(X)+log(X)))+cos(1))/(sin(X)+sin(X)))+cos((cos(log(log(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((X-X))+log(((sin(X)+cos((cos(X)-log(1))))+sin(X))))+cos(((1*X)*(cos(1)-cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(((log(log(X))*(X/X))/log(X)))+cos(1)))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(log(log(X)))-(((log(1)+(X-1))*cos(1))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log((X/1)))-(1*X))-((cos(X)/(1-1))-log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(1)+(1-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(cos(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((log(cos(cos(1)))-(X/X))*cos(X))+sin(X)))*log(((cos(X)*(X/X))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/sin(X))/(log(X)+cos(X)))+sin(1))/(1+1))+log((log(log(log(1)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/log(1))+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(1)))+log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)/(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+log((log(cos(cos(1)))-(X/X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)+(1-1)))*log(((log(X)*(X-X))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)+log(X)))+log((X-X)))/(log(X)+log(1)))+cos((log(log(cos(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log((X/1)))-(1*X))-(sin(1)/log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/sin(log(X)))))+log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(1)))*log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((((1+X)*cos(X))+log(sin((((log(X)*(1-X))-sin(X))*((1*1)/cos(X)))))))*cos((X-1)))+cos((X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/(cos(1)*(cos(sin(((log(X)+log(1))*log(log(X)))))/log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((log((cos(1)+(X-1)))/sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X*1))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(log(X)-cos((log(sin(cos(X)))*(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(X-X))-(sin(1)+cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((((1+X)*cos(X))*cos(X))+log(X)))*log(((cos(X)*(X/1))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(X)+log((log(sin(X))-(X/X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(X)+cos(1))+(log(log(1))*(1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((cos(1)+(1-1)))*log(((log(X)*(X-X))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/sin(X))/(log(X)/log(X)))+log(1))/(1-1))+log((log(cos(X))+(cos(1)+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(log(log(log(1)))-(((log(1)+(X-1))*cos(1))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+X))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log(((log(X)+log(1))*log(sin(1)))))-(((log(1)+(1-1))*sin(X))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(X)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((1/X)*cos(X))+sin(X)))*log(((cos(X)*(cos(X)*(1*1)))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(cos(X))-cos(1))+(log(log(X))*(1/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/cos(X))/(sin(X)+cos((cos(X)-log(1)))))+cos(1))/(sin(X)+log(1)))+cos((log(log(log(X)))+(X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(sin(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(log(cos(1)))-(X/X))+log((log(log(log(X)))+(X/X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((cos(X)/log(1))))-((log(X)/(cos(1)*(1*1)))+sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(1)*log(((log((log(cos(log(X)))+(X/1)))*(1-X))-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/cos(((1/X)/(X-X))))))+log((log(log(X))*(1/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(sin(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((((1/X)*cos(X))+sin(X)))*log(((cos(X)*((log(X)*(1-X))*sin(X)))/log(((sin(X)/cos(cos(X)))+cos(log((X-X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(1)*(sin(1)+cos((log(cos(cos(1)))-(X/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(sin((log(log((X/1)))*log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)*(1*1))-(log(sin(log(X)))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(/), 'expresion': '(sin(sin(((log(X)+log(X))/log(cos(X)))))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(X)))+(X-1)))*(((X*1)/(1+1))/sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((1/1)/(cos(1)/(log(log(X))/cos(((1/X)/(X-X))))))+log((X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(log((log(log(cos(1)))+(X-1)))*(((X*1)/(1+1))/sin(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(((log(1)/sin(cos(X)))+log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(1)*(log(1)+(X-1)))-(sin(1)+sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-X))/cos(sin(((log(X)+log(1))*log(log(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin((log(X)+(X-1)))*(((1*1)*(1-1))/cos(sin(((log(X)+log(1))*log(log(X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((cos(1)+(X-1)))+cos(((X+X)+sin(X))))+cos(((X*X)*(cos((log(log((X-1)))-(X/1)))-cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(cos(X))+cos(1))+(log(log(X))+(X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(sin(log(((sin(X)/cos(cos(X)))+cos(log((X-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '(((((cos(X)/log(X))/(sin(X)/log(X)))+cos(1))/(log(X)+log(1)))+cos((log(log(cos(X)))+(log((log(log(log(X)))+(X/X)))+(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(((X-1)-((X+X)/cos(sin(1)))))*log(((log(X)*(1-X))*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(-), 'expresion': '(cos(log((X*X)))-(((log(1)+(1-1))*log(cos(1)))+log((log(1)+(X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((log(1)/log(1))-(sin(1)+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(+), 'expresion': '((log((log((log(1)+(X-1)))+cos(((X+X)+sin(X)))))*cos((X-1)))+cos((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(X))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(0.6119), 'isValida': True}"
