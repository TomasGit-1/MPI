,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99
0,"{'tree': Node(-), 'expresion': '((log(log(X))-(log(log(1))-(log(sin(log(X)))*cos(X))))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))-sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(X)/sin(1))/((cos(1)+(1*1))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(1))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(log(1)/sin(1))))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(cos(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((1*1)/sin(1)))-cos(log(1)))*log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((X-X)+sin(1)))-log(log(1)))*sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(X*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(cos(1))+log(log(X)))/((cos(X)+((cos(1)/(1/1))-((1*1)+(1-1))))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(cos(log(1)))/log(1))*cos(1))-(((cos(X)+(X+X))+cos(log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(cos(X)))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(sin(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))-(cos(log(X))*cos(X)))/log((sin(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(sin(log(((cos(X)/log(1))-(sin(log(sin(1)))*cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1-X))))-log(sin((log(X)/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)/sin(log(log(1))))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(cos(X)*log(cos(1))))/cos((sin(1)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(1))+(log(((1*1)*log(1)))/log((1-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+log(1))*sin(sin(log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '((((X+1)*(X-X))+log(cos(X)))+cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))/log(log(1)))*sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))-((1*1)+(1-1)))-((X-1)/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos((1+X))/log(1))/((cos(1)+(1*X))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(log(cos(X))*cos(X)))/log((cos(X)/cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*X)-(1/1))))-(((cos(X)+(X+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin((1*X))*cos(cos(X)))*(log(log(X))/log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X-1)-cos(1))-(((cos(X)+(1+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(X))*sin((log(1)+cos(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(log(log(1))-cos(X)))/(sin((X/1))+(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*1)-(1/1))))-(((cos(X)+(X+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+sin((X-X)))*sin(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(X)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))/((cos(X)+(X*X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((log(X)/(1-X))))-sin(sin((log(1)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(X)))/log(log(1)))*sin(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(X)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))-(((((1+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin(sin(X))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(cos(X)*log(log(1))))/((cos(X)+(1+X))-sin(sin((log(X)/sin(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos((X+X))/log(X))/((cos(1)+(1*X))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X-1)-cos(1))-(((cos(X)+(1+X))+cos(log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(1))+(log(((1*1)*log(1)))/log((1-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)*sin(1))*(sin(log(1))/log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))/(((sin(X)/sin(log(log(1))))-(log(1)*sin(X)))+(1-1)))-(((((1+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(log(1))))/cos(log(X)))*log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1+1)-(1+1))*sin(cos(X)))*(sin(log(X))/log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+sin(1))-sin(sin((log(1)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(sin(sin(X)))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1/1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(X)-cos(X))-((1+1)*(log(log(1))-(cos(X)*log(cos(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(1)))/log(log(X)))*cos((X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+log(1))*sin(sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(1)/sin(log(log(1))))-(log(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((X+1)*log(((1*1)-(1/1))))-(1*X))*(log(X)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(cos(log(log(1)))))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X-1)*(X-1))/(log(X)/(1+1)))-(log(log(1))*(log(1)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(cos(1))+log(log(X)))/((1+1)+sin(cos(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(cos(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((((log(log(sin(X)))/(1-X))/((X+X)*(log(X)/(X+1))))/log((X-X)))/(((cos((1+X))-log(1))*(X/1))*(log(1)*cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((1+1)-(X-1))-(1*X))-(log(sin(sin(log(X))))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(cos(sin(sin(X)))))/log(log(X)))*cos((X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1+1)*log(1))*(sin(1)*log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)/sin(log(log(1))))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1/1)-(1-X))*(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(cos(log(1)))))/log(1))*log((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((X-X)+log(1)))-log(log(1)))*sin((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(sin(1))))/cos(log(X)))*log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(X)-cos(X))-((1+1)*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+sin(1))-sin(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '((((cos(log(sin(X)))*(1-X))/((X+X)*(log(X)/(1+1))))/log((cos(log(X))/(log(cos(log(1)))/log(log(1))))))+log(cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))/((1/1)+(1-1)))-(((((X+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))/log(cos(cos(log(sin(1))))))*sin(sin(sin(X))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(X))*sin((log(1)+cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)/log(1))/(sin(1)-sin(X)))/(sin(X)+(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(cos(X)*log(cos(1))))/cos((log(sin(1))-(log((X-X))+(1/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1-1))))-log(sin((log(X)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((((sin(log(1))-(cos(1)*cos(X)))/sin(1))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1+X))))-log(sin((log(sin(1))/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(1)))/(cos(1)*cos(X)))/log((sin(X)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*X)-(1/1))))-(((cos(X)+(X+1))+cos(log(log(1))))-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log(log(1))-(log(sin(log(X)))*cos(X))))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))-sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(X)/sin(1))/((cos(1)+(1*1))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(1))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(log(1)/sin(1))))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}"
1,"{'tree': Node(-), 'expresion': '((log(log(X))-(log(log(1))-(log(sin(log(X)))*cos(X))))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))-sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(X)/sin(1))/((cos(1)+(1*1))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(1))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(log(1)/sin(1))))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(cos(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((1*1)/sin(1)))-cos(log(1)))*log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((X-X)+sin(1)))-log(log(1)))*sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(X*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(cos(1))+log(log(X)))/((cos(X)+((cos(1)/(1/1))-((1*1)+(1-1))))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(cos(log(1)))/log(1))*cos(1))-(((cos(X)+(X+X))+cos(log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(cos(X)))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(sin(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))-(cos(log(X))*cos(X)))/log((sin(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(sin(log(((cos(X)/log(1))-(sin(log(sin(1)))*cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1-X))))-log(sin((log(X)/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)/sin(log(log(1))))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(cos(X)*log(cos(1))))/cos((sin(1)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(1))+(log(((1*1)*log(1)))/log((1-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+log(1))*sin(sin(log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '((((X+1)*(X-X))+log(cos(X)))+cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))/log(log(1)))*sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))-((1*1)+(1-1)))-((X-1)/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos((1+X))/log(1))/((cos(1)+(1*X))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(log(cos(X))*cos(X)))/log((cos(X)/cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*X)-(1/1))))-(((cos(X)+(X+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin((1*X))*cos(cos(X)))*(log(log(X))/log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X-1)-cos(1))-(((cos(X)+(1+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(X))*sin((log(1)+cos(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(log(log(1))-cos(X)))/(sin((X/1))+(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*1)-(1/1))))-(((cos(X)+(X+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+sin((X-X)))*sin(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(X)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))/((cos(X)+(X*X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((log(X)/(1-X))))-sin(sin((log(1)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(X)))/log(log(1)))*sin(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(X)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))-(((((1+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin(sin(X))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(cos(X)*log(log(1))))/((cos(X)+(1+X))-sin(sin((log(X)/sin(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos((X+X))/log(X))/((cos(1)+(1*X))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X-1)-cos(1))-(((cos(X)+(1+X))+cos(log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(1))+(log(((1*1)*log(1)))/log((1-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)*sin(1))*(sin(log(1))/log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))/(((sin(X)/sin(log(log(1))))-(log(1)*sin(X)))+(1-1)))-(((((1+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(log(1))))/cos(log(X)))*log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1+1)-(1+1))*sin(cos(X)))*(sin(log(X))/log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+sin(1))-sin(sin((log(1)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(sin(sin(X)))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1/1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(X)-cos(X))-((1+1)*(log(log(1))-(cos(X)*log(cos(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(1)))/log(log(X)))*cos((X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+log(1))*sin(sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(1)/sin(log(log(1))))-(log(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((X+1)*log(((1*1)-(1/1))))-(1*X))*(log(X)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(cos(log(log(1)))))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X-1)*(X-1))/(log(X)/(1+1)))-(log(log(1))*(log(1)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(cos(1))+log(log(X)))/((1+1)+sin(cos(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(cos(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((((log(log(sin(X)))/(1-X))/((X+X)*(log(X)/(X+1))))/log((X-X)))/(((cos((1+X))-log(1))*(X/1))*(log(1)*cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((1+1)-(X-1))-(1*X))-(log(sin(sin(log(X))))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(cos(sin(sin(X)))))/log(log(X)))*cos((X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1+1)*log(1))*(sin(1)*log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)/sin(log(log(1))))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1/1)-(1-X))*(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(cos(log(1)))))/log(1))*log((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((X-X)+log(1)))-log(log(1)))*sin((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(sin(1))))/cos(log(X)))*log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(X)-cos(X))-((1+1)*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+sin(1))-sin(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '((((cos(log(sin(X)))*(1-X))/((X+X)*(log(X)/(1+1))))/log((cos(log(X))/(log(cos(log(1)))/log(log(1))))))+log(cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))/((1/1)+(1-1)))-(((((X+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))/log(cos(cos(log(sin(1))))))*sin(sin(sin(X))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(X))*sin((log(1)+cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)/log(1))/(sin(1)-sin(X)))/(sin(X)+(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(cos(X)*log(cos(1))))/cos((log(sin(1))-(log((X-X))+(1/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1-1))))-log(sin((log(X)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((((sin(log(1))-(cos(1)*cos(X)))/sin(1))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1+X))))-log(sin((log(sin(1))/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(1)))/(cos(1)*cos(X)))/log((sin(X)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*X)-(1/1))))-(((cos(X)+(X+1))+cos(log(log(1))))-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log(log(1))-(log(sin(log(X)))*cos(X))))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))-sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(X)/sin(1))/((cos(1)+(1*1))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(1))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(log(1)/sin(1))))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}"
2,"{'tree': Node(-), 'expresion': '((log(log(X))-(log(log(1))-(log(sin(log(X)))*cos(X))))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))-sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(X)/sin(1))/((cos(1)+(1*1))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(1))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(log(1)/sin(1))))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(cos(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((1*1)/sin(1)))-cos(log(1)))*log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((X-X)+sin(1)))-log(log(1)))*sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(X*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(cos(1))+log(log(X)))/((cos(X)+((cos(1)/(1/1))-((1*1)+(1-1))))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(cos(log(1)))/log(1))*cos(1))-(((cos(X)+(X+X))+cos(log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(cos(X)))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(sin(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))-(cos(log(X))*cos(X)))/log((sin(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(sin(log(((cos(X)/log(1))-(sin(log(sin(1)))*cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1-X))))-log(sin((log(X)/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)/sin(log(log(1))))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(cos(X)*log(cos(1))))/cos((sin(1)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(1))+(log(((1*1)*log(1)))/log((1-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+log(1))*sin(sin(log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '((((X+1)*(X-X))+log(cos(X)))+cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))/log(log(1)))*sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))-((1*1)+(1-1)))-((X-1)/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos((1+X))/log(1))/((cos(1)+(1*X))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(log(cos(X))*cos(X)))/log((cos(X)/cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*X)-(1/1))))-(((cos(X)+(X+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin((1*X))*cos(cos(X)))*(log(log(X))/log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X-1)-cos(1))-(((cos(X)+(1+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(X))*sin((log(1)+cos(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(log(log(1))-cos(X)))/(sin((X/1))+(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*1)-(1/1))))-(((cos(X)+(X+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+sin((X-X)))*sin(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(X)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))/((cos(X)+(X*X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((log(X)/(1-X))))-sin(sin((log(1)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(X)))/log(log(1)))*sin(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(X)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))-(((((1+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin(sin(X))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(cos(X)*log(log(1))))/((cos(X)+(1+X))-sin(sin((log(X)/sin(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos((X+X))/log(X))/((cos(1)+(1*X))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X-1)-cos(1))-(((cos(X)+(1+X))+cos(log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(1))+(log(((1*1)*log(1)))/log((1-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)*sin(1))*(sin(log(1))/log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))/(((sin(X)/sin(log(log(1))))-(log(1)*sin(X)))+(1-1)))-(((((1+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(log(1))))/cos(log(X)))*log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1+1)-(1+1))*sin(cos(X)))*(sin(log(X))/log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+sin(1))-sin(sin((log(1)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(sin(sin(X)))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1/1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(X)-cos(X))-((1+1)*(log(log(1))-(cos(X)*log(cos(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(1)))/log(log(X)))*cos((X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+log(1))*sin(sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(1)/sin(log(log(1))))-(log(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((X+1)*log(((1*1)-(1/1))))-(1*X))*(log(X)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(cos(log(log(1)))))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X-1)*(X-1))/(log(X)/(1+1)))-(log(log(1))*(log(1)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(cos(1))+log(log(X)))/((1+1)+sin(cos(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(cos(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((((log(log(sin(X)))/(1-X))/((X+X)*(log(X)/(X+1))))/log((X-X)))/(((cos((1+X))-log(1))*(X/1))*(log(1)*cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((1+1)-(X-1))-(1*X))-(log(sin(sin(log(X))))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(cos(sin(sin(X)))))/log(log(X)))*cos((X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1+1)*log(1))*(sin(1)*log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)/sin(log(log(1))))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1/1)-(1-X))*(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(cos(log(1)))))/log(1))*log((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((X-X)+log(1)))-log(log(1)))*sin((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(sin(1))))/cos(log(X)))*log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(X)-cos(X))-((1+1)*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+sin(1))-sin(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '((((cos(log(sin(X)))*(1-X))/((X+X)*(log(X)/(1+1))))/log((cos(log(X))/(log(cos(log(1)))/log(log(1))))))+log(cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))/((1/1)+(1-1)))-(((((X+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))/log(cos(cos(log(sin(1))))))*sin(sin(sin(X))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(X))*sin((log(1)+cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)/log(1))/(sin(1)-sin(X)))/(sin(X)+(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(cos(X)*log(cos(1))))/cos((log(sin(1))-(log((X-X))+(1/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1-1))))-log(sin((log(X)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((((sin(log(1))-(cos(1)*cos(X)))/sin(1))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1+X))))-log(sin((log(sin(1))/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(1)))/(cos(1)*cos(X)))/log((sin(X)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*X)-(1/1))))-(((cos(X)+(X+1))+cos(log(log(1))))-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log(log(1))-(log(sin(log(X)))*cos(X))))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))-sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(X)/sin(1))/((cos(1)+(1*1))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(1))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(log(1)/sin(1))))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}"
3,"{'tree': Node(-), 'expresion': '((log(log(X))-(log(log(1))-(log(sin(log(X)))*cos(X))))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))-sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(X)/sin(1))/((cos(1)+(1*1))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(1))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(log(1)/sin(1))))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(cos(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((1*1)/sin(1)))-cos(log(1)))*log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((X-X)+sin(1)))-log(log(1)))*sin((X/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(X*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(cos(1))+log(log(X)))/((cos(X)+((cos(1)/(1/1))-((1*1)+(1-1))))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((log(cos(log(1)))/log(1))*cos(1))-(((cos(X)+(X+X))+cos(log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(cos(X)))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(sin(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(X))-(cos(log(X))*cos(X)))/log((sin(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(sin(log(((cos(X)/log(1))-(sin(log(sin(1)))*cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1-X))))-log(sin((log(X)/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)/sin(log(log(1))))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(cos(X)*log(cos(1))))/cos((sin(1)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(1))+(log(((1*1)*log(1)))/log((1-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+log(1))*sin(sin(log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '((((X+1)*(X-X))+log(cos(X)))+cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))/log(log(1)))*sin(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))-((1*1)+(1-1)))-((X-1)/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos((1+X))/log(1))/((cos(1)+(1*X))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(log(cos(X))*cos(X)))/log((cos(X)/cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*X)-(1/1))))-(((cos(X)+(X+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin((1*X))*cos(cos(X)))*(log(log(X))/log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X-1)-cos(1))-(((cos(X)+(1+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(X))*sin((log(1)+cos(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(log(log(1))-cos(X)))/(sin((X/1))+(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*1)-(1/1))))-(((cos(X)+(X+X))+cos(log(log(1))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+sin((X-X)))*sin(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(X)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))/((cos(X)+(X*X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((log(X)/(1-X))))-sin(sin((log(1)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(X)))/log(log(1)))*sin(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(X)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))-(((((1+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin(sin(X))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(cos(X)*log(log(1))))/((cos(X)+(1+X))-sin(sin((log(X)/sin(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos((X+X))/log(X))/((cos(1)+(1*X))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X-1)-cos(1))-(((cos(X)+(1+X))+cos(log(cos(X))))/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(1))+(log(((1*1)*log(1)))/log((1-X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)*sin(1))*(sin(log(1))/log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))/(((sin(X)/sin(log(log(1))))-(log(1)*sin(X)))+(1-1)))-(((((1+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(log(1))))/cos(log(X)))*log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((((1+1)-(1+1))*sin(cos(X)))*(sin(log(X))/log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+sin(1))-sin(sin((log(1)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(sin(sin(X)))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1/1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(X)-cos(X))-((1+1)*(log(log(1))-(cos(X)*log(cos(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(sin(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(1)))/log(log(X)))*cos((X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))+log(1))*sin(sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(1)/sin(log(log(1))))-(log(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((X+1)*log(((1*1)-(1/1))))-(1*X))*(log(X)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(cos(log(log(1)))))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((((X-1)*(X-1))/(log(X)/(1+1)))-(log(log(1))*(log(1)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(cos(1))+log(log(X)))/((1+1)+sin(cos(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(X)/log(1))/(sin(1)-cos(X)))/(sin((X/1))+(cos(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((((log(log(sin(X)))/(1-X))/((X+X)*(log(X)/(X+1))))/log((X-X)))/(((cos((1+X))-log(1))*(X/1))*(log(1)*cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((((1+1)-(X-1))-(1*X))-(log(sin(sin(log(X))))+log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((sin(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(cos(sin(sin(X)))))/log(log(X)))*cos((X+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1+1)*log(1))*(sin(1)*log(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)/sin(log(log(1))))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(1/X)))-((sin(X)-cos(X))*(((1/1)-(1-X))*(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(cos(log(1)))))/log(1))*log((X-X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((X-X)+log(1)))-log(log(1)))*sin((1/X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))/sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(log(sin(1))))/cos(log(X)))*log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((cos(log(X))/(log(cos(log(1)))/log(log(1))))-((sin(X)-cos(X))-((1+1)*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+sin(1))-sin(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(+), 'expresion': '((((cos(log(sin(X)))*(1-X))/((X+X)*(log(X)/(1+1))))/log((cos(log(X))/(log(cos(log(1)))/log(log(1))))))+log(cos(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '(((cos(1)/(1/1))/((1/1)+(1-1)))-(((((X+1)-(X-1))-(1*X))-(sin(1)/log(1)))/log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '((log(cos(log(1)))/log(cos(cos(log(sin(1))))))*sin(sin(sin(X))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(X))*sin((log(1)+cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)/log(1))/(sin(1)-sin(X)))/(sin(X)+(1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-(cos(X)*log(cos(1))))/cos((log(sin(1))-(log((X-X))+(1/X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1-1))))-log(sin((log(X)/sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((((sin(log(1))-(cos(1)*cos(X)))/sin(1))-(log(1)*sin(X)))/((cos(X)+(X+X))+sin(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(1))+log((sin(X)/(1+X))))-log(sin((log(sin(1))/log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(log(1)))/(cos(1)*cos(X)))/log((sin(X)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X+1)*cos(((1*X)-(1/1))))-(((cos(X)+(X+1))+cos(log(log(1))))-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log(log(1))-(log(sin(log(X)))*cos(X))))-((sin(X)-cos(X))*(((1+1)-(1+1))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)-((sin(log(1))-(cos(1)*cos(X)))-sin(1)))-cos(log(1)))*log(1))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(X)/sin(1))/((cos(1)+(1*1))/log((1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((((X/1)*cos(1))-((1*1)/sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}","{'tree': Node(-), 'expresion': '((log(log(X))-(log((X-X))+(log(1)/sin(1))))-((sin(X)-cos(X))*(((1+1)-(1-X))*(X-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(3.4348), 'isValida': True}"
