,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99
0,"{'tree': Node(+), 'expresion': '((sin(1)-((1/X)/(log(log(X))-log(log(1)))))+cos(log(cos(log(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos(log((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(log(sin(X))-cos(X)))))/cos(log((1*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((sin(1)-(X-X))*(log(1)/log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)/log(((X-X)/(cos(X)-cos(log(cos(log(sin(X))))))))))+cos(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-1))*log((X+1)))*((cos(X)*(1*1))*sin((log(sin(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos((log(1)+cos(X)))+log(sin(((1-1)-(X*X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((cos(sin(sin(((1-1)+(1-1)))))*cos(1))/(log(X)-cos(log(log(X))))))))*sin(log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)-log(X))-(sin(1)/(1*1)))/log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))*log(cos(sin(log(log((1-1)))))))*((sin(X)*(1-1))-(log(1)/(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)*cos(X)))+cos(cos(cos(cos(log(log(log(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))/log((sin(1)*(1-1))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1*X))/sin((sin(1)*log(1))))*(1-1))*(sin(log(log(log(log(1)))))-sin(((1-1)+(1-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))*log(cos(sin(log(log((1+X)))))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*((sin(X)*(1-1))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin(cos(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(1)))*sin(sin(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))*(sin(X)/log(cos(X)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin(((X/1)*cos(1)))+sin(log(log(log(cos(log(log(X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(1))+log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/(1/1))/(log(1)*cos(1)))*cos(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin((1-1)))+(log((1/1))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)-(log(1)*cos(1)))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/cos(1))*sin((log(1)*(log(log(1))*(1-1)))))*(sin(1)-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))*(sin(X)/log(cos(X)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(sin(sin(X)))/log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin((1-1))+log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((sin(1)*cos(X)))+sin(log(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(1-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)-log(X))-(sin(1)/(1*1)))/log((log(1)*(log(log(log(1)))*(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(1))+log(log(log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(X))-(log(1)/(X*1)))/log((sin(1)-((cos(X)/log(sin(sin(((1-1)+(1-1))))))*cos((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(((log((1-X))/sin((log(1)-log(1))))*(1-1))*(sin(1)-cos(X))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))*log((sin(X)/(1*1))))*((cos(X)*(1*1))*sin((log(log(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(sin(1))-(X*1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((cos(1)*cos(X)))+sin(log(log(log(cos(log(log(X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(1-1))-(log(X)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)+(X+1))-(sin(1)/(X-X)))/log((log((sin(cos(cos(X)))*log(1)))-(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)-((1/X)/(X/1)))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(sin(1))+cos(1)))+cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/sin(((1-1)+(1-1))))*sin((log(1)*(log(log(1))*(1-1)))))*((sin(1)+(1-1))+(sin(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/(cos(log(sin(X)))/log(1)))-(log(1)*cos(1)))*log(((log((X-X))/log((sin(1)*((1-1)+(X*1)))))*cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(cos(X)-cos(log(sin(X)))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(sin((X-X))/sin((log(X)-cos(cos(cos(X)))))))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)-log(cos(1)))-(sin(1)/(1*1)))/log((log(1)*(log(log(1))*(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)+(X+1))-(sin(1)-(X-X)))/log((log((log(sin(log(log(log(X)))))*log(1)))-(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(log(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)-(X+1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(log(1)))+cos(log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(X-1)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((cos(sin(sin(((1-1)+(1-1)))))*cos(1))+(log(X)-cos(log(log(X))))))))*log(log(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(cos(log(log(X))))/sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(X)+log(sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)/log(((X-X)/(cos(X)-cos(log(cos(log(sin(X))))))))))+sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(log((1*X)))/(((1-1)*(1/1))*(sin(1)/cos(log(1)))))+cos(log(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(sin((X-X))/sin((log(log(1))*log(1)))))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(1-1))*(sin(X)/log(cos(1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((log(sin(sin(X)))*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin(cos(sin(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin(1))*((sin(1)+(1-1))-(1+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)/(1+1))+(log(X)-cos(cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)+log(1))*log((1+X)))*((cos(1)*(1-1))-(sin(log((log((sin(1)*sin(1)))-(1/1))))/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin(1))*((sin(1)+(1-1))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin((sin(1)*cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((sin(1)/(1*1)))/log(log(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((1-1)+(1-1)))))*cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(1-1))*(sin(X)/log(cos(1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((log(log(1))/log(1))*cos(1))*((sin(1)+(1-1))-(log(1)/(sin(X)/cos(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((sin(1)*cos(X)))+log(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(X)+log(cos(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))/(sin(X)/log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)/(1-1))*(sin(log(log(1)))/log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)-(X*1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin(((X/1)*cos(1)))+sin(log(log(log(cos(cos(cos(log(cos(1))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(log(1))/(1+1))/(cos(X)-cos(log(log(X)))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(sin(sin(1)))*sin(sin(log(1))))*(sin(X)/log(cos(1)))))', 'y_predict': [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '((X*1)/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))/log(cos(cos(log(log(X))))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)+log(1))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(X))-(log(1)/(X*X)))/log((sin(1)-((cos(X)/log(1))*cos((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin((X*1)))*((sin(1)*((1-X)-(1/X)))-(sin(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(X-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(cos(X)-cos(log(sin(X)))))+log(log(cos(cos(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-1))/log((sin(1)*(sin(1)*log(1)))))*(1*1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(sin(1)/sin(((1-1)+(1-1)))))*(log(1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((((log((X-X))-log((sin(1)*(1-1))))*(1-1))*(log((X-1))*log((X+1))))*(log(1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((log(log(1))/log(1))*log(cos(sin(log(log((1+X)))))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-1))/log((sin(X)/(1*1))))*(1*1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(1)+log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))/cos(sin(((1-1)+(1-1)))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))-log((cos(1)*(1-1))))*(1-1))*(log((X-1))*log((X+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((X+1)*((sin(log(log(X)))*(1*1))*sin((log(sin(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((sin(1)/(1*1)))/log(sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))/log((sin(1)*(((log((X-X))/log((sin(1)*((1-1)+(X*1)))))*log(1))+(X*1)))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((sin(X)-(X-X))-(sin(1)/(1-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}"
1,"{'tree': Node(+), 'expresion': '((sin(1)-((1/X)/(log(log(X))-log(log(1)))))+cos(log(cos(log(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos(log((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(log(sin(X))-cos(X)))))/cos(log((1*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((sin(1)-(X-X))*(log(1)/log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)/log(((X-X)/(cos(X)-cos(log(cos(log(sin(X))))))))))+cos(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-1))*log((X+1)))*((cos(X)*(1*1))*sin((log(sin(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos((log(1)+cos(X)))+log(sin(((1-1)-(X*X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((cos(sin(sin(((1-1)+(1-1)))))*cos(1))/(log(X)-cos(log(log(X))))))))*sin(log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)-log(X))-(sin(1)/(1*1)))/log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))*log(cos(sin(log(log((1-1)))))))*((sin(X)*(1-1))-(log(1)/(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)*cos(X)))+cos(cos(cos(cos(log(log(log(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))/log((sin(1)*(1-1))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1*X))/sin((sin(1)*log(1))))*(1-1))*(sin(log(log(log(log(1)))))-sin(((1-1)+(1-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))*log(cos(sin(log(log((1+X)))))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*((sin(X)*(1-1))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin(cos(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(1)))*sin(sin(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))*(sin(X)/log(cos(X)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin(((X/1)*cos(1)))+sin(log(log(log(cos(log(log(X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(1))+log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/(1/1))/(log(1)*cos(1)))*cos(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin((1-1)))+(log((1/1))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)-(log(1)*cos(1)))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/cos(1))*sin((log(1)*(log(log(1))*(1-1)))))*(sin(1)-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))*(sin(X)/log(cos(X)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(sin(sin(X)))/log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin((1-1))+log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((sin(1)*cos(X)))+sin(log(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(1-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)-log(X))-(sin(1)/(1*1)))/log((log(1)*(log(log(log(1)))*(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(1))+log(log(log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(X))-(log(1)/(X*1)))/log((sin(1)-((cos(X)/log(sin(sin(((1-1)+(1-1))))))*cos((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(((log((1-X))/sin((log(1)-log(1))))*(1-1))*(sin(1)-cos(X))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))*log((sin(X)/(1*1))))*((cos(X)*(1*1))*sin((log(log(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(sin(1))-(X*1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((cos(1)*cos(X)))+sin(log(log(log(cos(log(log(X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(1-1))-(log(X)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)+(X+1))-(sin(1)/(X-X)))/log((log((sin(cos(cos(X)))*log(1)))-(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)-((1/X)/(X/1)))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(sin(1))+cos(1)))+cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/sin(((1-1)+(1-1))))*sin((log(1)*(log(log(1))*(1-1)))))*((sin(1)+(1-1))+(sin(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/(cos(log(sin(X)))/log(1)))-(log(1)*cos(1)))*log(((log((X-X))/log((sin(1)*((1-1)+(X*1)))))*cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(cos(X)-cos(log(sin(X)))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(sin((X-X))/sin((log(X)-cos(cos(cos(X)))))))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)-log(cos(1)))-(sin(1)/(1*1)))/log((log(1)*(log(log(1))*(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)+(X+1))-(sin(1)-(X-X)))/log((log((log(sin(log(log(log(X)))))*log(1)))-(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(log(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)-(X+1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(log(1)))+cos(log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(X-1)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((cos(sin(sin(((1-1)+(1-1)))))*cos(1))+(log(X)-cos(log(log(X))))))))*log(log(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(cos(log(log(X))))/sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(X)+log(sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)/log(((X-X)/(cos(X)-cos(log(cos(log(sin(X))))))))))+sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(log((1*X)))/(((1-1)*(1/1))*(sin(1)/cos(log(1)))))+cos(log(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(sin((X-X))/sin((log(log(1))*log(1)))))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(1-1))*(sin(X)/log(cos(1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((log(sin(sin(X)))*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin(cos(sin(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin(1))*((sin(1)+(1-1))-(1+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)/(1+1))+(log(X)-cos(cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)+log(1))*log((1+X)))*((cos(1)*(1-1))-(sin(log((log((sin(1)*sin(1)))-(1/1))))/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin(1))*((sin(1)+(1-1))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin((sin(1)*cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((sin(1)/(1*1)))/log(log(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((1-1)+(1-1)))))*cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(1-1))*(sin(X)/log(cos(1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((log(log(1))/log(1))*cos(1))*((sin(1)+(1-1))-(log(1)/(sin(X)/cos(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((sin(1)*cos(X)))+log(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(X)+log(cos(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))/(sin(X)/log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)/(1-1))*(sin(log(log(1)))/log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)-(X*1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin(((X/1)*cos(1)))+sin(log(log(log(cos(cos(cos(log(cos(1))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(log(1))/(1+1))/(cos(X)-cos(log(log(X)))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(sin(sin(1)))*sin(sin(log(1))))*(sin(X)/log(cos(1)))))', 'y_predict': [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '((X*1)/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))/log(cos(cos(log(log(X))))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)+log(1))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(X))-(log(1)/(X*X)))/log((sin(1)-((cos(X)/log(1))*cos((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin((X*1)))*((sin(1)*((1-X)-(1/X)))-(sin(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(X-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(cos(X)-cos(log(sin(X)))))+log(log(cos(cos(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-1))/log((sin(1)*(sin(1)*log(1)))))*(1*1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(sin(1)/sin(((1-1)+(1-1)))))*(log(1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((((log((X-X))-log((sin(1)*(1-1))))*(1-1))*(log((X-1))*log((X+1))))*(log(1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((log(log(1))/log(1))*log(cos(sin(log(log((1+X)))))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-1))/log((sin(X)/(1*1))))*(1*1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(1)+log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))/cos(sin(((1-1)+(1-1)))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))-log((cos(1)*(1-1))))*(1-1))*(log((X-1))*log((X+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((X+1)*((sin(log(log(X)))*(1*1))*sin((log(sin(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((sin(1)/(1*1)))/log(sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))/log((sin(1)*(((log((X-X))/log((sin(1)*((1-1)+(X*1)))))*log(1))+(X*1)))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((sin(X)-(X-X))-(sin(1)/(1-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}"
2,"{'tree': Node(+), 'expresion': '((sin(1)-((1/X)/(log(log(X))-log(log(1)))))+cos(log(cos(log(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos(log((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(log(sin(X))-cos(X)))))/cos(log((1*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((sin(1)-(X-X))*(log(1)/log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)/log(((X-X)/(cos(X)-cos(log(cos(log(sin(X))))))))))+cos(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-1))*log((X+1)))*((cos(X)*(1*1))*sin((log(sin(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos((log(1)+cos(X)))+log(sin(((1-1)-(X*X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((cos(sin(sin(((1-1)+(1-1)))))*cos(1))/(log(X)-cos(log(log(X))))))))*sin(log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)-log(X))-(sin(1)/(1*1)))/log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))*log(cos(sin(log(log((1-1)))))))*((sin(X)*(1-1))-(log(1)/(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)*cos(X)))+cos(cos(cos(cos(log(log(log(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))/log((sin(1)*(1-1))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1*X))/sin((sin(1)*log(1))))*(1-1))*(sin(log(log(log(log(1)))))-sin(((1-1)+(1-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))*log(cos(sin(log(log((1+X)))))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*((sin(X)*(1-1))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin(cos(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(1)))*sin(sin(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))*(sin(X)/log(cos(X)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin(((X/1)*cos(1)))+sin(log(log(log(cos(log(log(X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(1))+log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/(1/1))/(log(1)*cos(1)))*cos(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin((1-1)))+(log((1/1))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)-(log(1)*cos(1)))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/cos(1))*sin((log(1)*(log(log(1))*(1-1)))))*(sin(1)-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))*(sin(X)/log(cos(X)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(sin(sin(X)))/log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin((1-1))+log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((sin(1)*cos(X)))+sin(log(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(1-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)-log(X))-(sin(1)/(1*1)))/log((log(1)*(log(log(log(1)))*(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(1))+log(log(log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(X))-(log(1)/(X*1)))/log((sin(1)-((cos(X)/log(sin(sin(((1-1)+(1-1))))))*cos((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(((log((1-X))/sin((log(1)-log(1))))*(1-1))*(sin(1)-cos(X))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))*log((sin(X)/(1*1))))*((cos(X)*(1*1))*sin((log(log(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(sin(1))-(X*1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((cos(1)*cos(X)))+sin(log(log(log(cos(log(log(X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(1-1))-(log(X)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)+(X+1))-(sin(1)/(X-X)))/log((log((sin(cos(cos(X)))*log(1)))-(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)-((1/X)/(X/1)))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(sin(1))+cos(1)))+cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/sin(((1-1)+(1-1))))*sin((log(1)*(log(log(1))*(1-1)))))*((sin(1)+(1-1))+(sin(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/(cos(log(sin(X)))/log(1)))-(log(1)*cos(1)))*log(((log((X-X))/log((sin(1)*((1-1)+(X*1)))))*cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(cos(X)-cos(log(sin(X)))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(sin((X-X))/sin((log(X)-cos(cos(cos(X)))))))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)-log(cos(1)))-(sin(1)/(1*1)))/log((log(1)*(log(log(1))*(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)+(X+1))-(sin(1)-(X-X)))/log((log((log(sin(log(log(log(X)))))*log(1)))-(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(log(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)-(X+1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(log(1)))+cos(log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(X-1)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((cos(sin(sin(((1-1)+(1-1)))))*cos(1))+(log(X)-cos(log(log(X))))))))*log(log(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(cos(log(log(X))))/sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(X)+log(sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)/log(((X-X)/(cos(X)-cos(log(cos(log(sin(X))))))))))+sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(log((1*X)))/(((1-1)*(1/1))*(sin(1)/cos(log(1)))))+cos(log(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(sin((X-X))/sin((log(log(1))*log(1)))))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(1-1))*(sin(X)/log(cos(1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((log(sin(sin(X)))*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin(cos(sin(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin(1))*((sin(1)+(1-1))-(1+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)/(1+1))+(log(X)-cos(cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)+log(1))*log((1+X)))*((cos(1)*(1-1))-(sin(log((log((sin(1)*sin(1)))-(1/1))))/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin(1))*((sin(1)+(1-1))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin((sin(1)*cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((sin(1)/(1*1)))/log(log(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((1-1)+(1-1)))))*cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(1-1))*(sin(X)/log(cos(1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((log(log(1))/log(1))*cos(1))*((sin(1)+(1-1))-(log(1)/(sin(X)/cos(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((sin(1)*cos(X)))+log(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(X)+log(cos(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))/(sin(X)/log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)/(1-1))*(sin(log(log(1)))/log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)-(X*1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin(((X/1)*cos(1)))+sin(log(log(log(cos(cos(cos(log(cos(1))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(log(1))/(1+1))/(cos(X)-cos(log(log(X)))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(sin(sin(1)))*sin(sin(log(1))))*(sin(X)/log(cos(1)))))', 'y_predict': [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '((X*1)/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))/log(cos(cos(log(log(X))))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)+log(1))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(X))-(log(1)/(X*X)))/log((sin(1)-((cos(X)/log(1))*cos((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin((X*1)))*((sin(1)*((1-X)-(1/X)))-(sin(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(X-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(cos(X)-cos(log(sin(X)))))+log(log(cos(cos(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-1))/log((sin(1)*(sin(1)*log(1)))))*(1*1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(sin(1)/sin(((1-1)+(1-1)))))*(log(1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((((log((X-X))-log((sin(1)*(1-1))))*(1-1))*(log((X-1))*log((X+1))))*(log(1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((log(log(1))/log(1))*log(cos(sin(log(log((1+X)))))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-1))/log((sin(X)/(1*1))))*(1*1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(1)+log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))/cos(sin(((1-1)+(1-1)))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))-log((cos(1)*(1-1))))*(1-1))*(log((X-1))*log((X+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((X+1)*((sin(log(log(X)))*(1*1))*sin((log(sin(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((sin(1)/(1*1)))/log(sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))/log((sin(1)*(((log((X-X))/log((sin(1)*((1-1)+(X*1)))))*log(1))+(X*1)))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((sin(X)-(X-X))-(sin(1)/(1-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}"
3,"{'tree': Node(+), 'expresion': '((sin(1)-((1/X)/(log(log(X))-log(log(1)))))+cos(log(cos(log(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(cos(log((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(log(sin(X))-cos(X)))))/cos(log((1*X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((sin(1)-(X-X))*(log(1)/log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)/log(((X-X)/(cos(X)-cos(log(cos(log(sin(X))))))))))+cos(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-1))*log((X+1)))*((cos(X)*(1*1))*sin((log(sin(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos((log(1)+cos(X)))+log(sin(((1-1)-(X*X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((cos(sin(sin(((1-1)+(1-1)))))*cos(1))/(log(X)-cos(log(log(X))))))))*sin(log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)-log(X))-(sin(1)/(1*1)))/log(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))*log(cos(sin(log(log((1-1)))))))*((sin(X)*(1-1))-(log(1)/(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)*cos(X)))+cos(cos(cos(cos(log(log(log(1))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))/log((sin(1)*(1-1))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1*X))/sin((sin(1)*log(1))))*(1-1))*(sin(log(log(log(log(1)))))-sin(((1-1)+(1-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))*log(cos(sin(log(log((1+X)))))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*((sin(X)*(1-1))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin(cos(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(1)))*sin(sin(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))*(sin(X)/log(cos(X)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin(((X/1)*cos(1)))+sin(log(log(log(cos(log(log(X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(1))+log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/(1/1))/(log(1)*cos(1)))*cos(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin((1-1)))+(log((1/1))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)-(log(1)*cos(1)))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(X)/sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/cos(1))*sin((log(1)*(log(log(1))*(1-1)))))*(sin(1)-cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))*(sin(X)/log(cos(X)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(sin(sin(X)))/log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((sin((1-1))+log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((sin(1)*cos(X)))+sin(log(log(log(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(1-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(1)-log(X))-(sin(1)/(1*1)))/log((log(1)*(log(log(log(1)))*(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(1))+log(log(log(cos(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(X))-(log(1)/(X*1)))/log((sin(1)-((cos(X)/log(sin(sin(((1-1)+(1-1))))))*cos((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(((log((1-X))/sin((log(1)-log(1))))*(1-1))*(sin(1)-cos(X))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))*log((sin(X)/(1*1))))*((cos(X)*(1*1))*sin((log(log(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(sin(1))-(X*1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((cos(1)*cos(X)))+sin(log(log(log(cos(log(log(X))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(1-1))-(log(X)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)+(X+1))-(sin(1)/(X-X)))/log((log((sin(cos(cos(X)))*log(1)))-(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)-((1/X)/(X/1)))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(sin(1))+cos(1)))+cos(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/sin(((1-1)+(1-1))))*sin((log(1)*(log(log(1))*(1-1)))))*((sin(1)+(1-1))+(sin(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/(cos(log(sin(X)))/log(1)))-(log(1)*cos(1)))*log(((log((X-X))/log((sin(1)*((1-1)+(X*1)))))*cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(cos(X)-cos(log(sin(X)))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(sin((X-X))/sin((log(X)-cos(cos(cos(X)))))))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)-log(cos(1)))-(sin(1)/(1*1)))/log((log(1)*(log(log(1))*(1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)+(X+1))-(sin(1)-(X-X)))/log((log((log(sin(log(log(log(X)))))*log(1)))-(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(log(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)-(X+1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(sin(log(1)))+cos(log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(X-1)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((cos(sin(sin(((1-1)+(1-1)))))*cos(1))+(log(X)-cos(log(log(X))))))))*log(log(sin(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(cos(log(log(X))))/sin(sin(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(X)+log(sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log((sin(1)/log(((X-X)/(cos(X)-cos(log(cos(log(sin(X))))))))))+sin(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((log(log((1*X)))/(((1-1)*(1/1))*(sin(1)/cos(log(1)))))+cos(log(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*log(1))*((sin(1)+(sin((X-X))/sin((log(log(1))*log(1)))))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(1-1))*(sin(X)/log(cos(1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((log(sin(sin(X)))*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin(cos(sin(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin(1))*((sin(1)+(1-1))-(1+1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(((cos(X)/(1+1))+(log(X)-cos(cos(cos(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)+log(1))*log((1+X)))*((cos(1)*(1-1))-(sin(log((log((sin(1)*sin(1)))-(1/1))))/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin(1))*((sin(1)+(1-1))-(log(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(X)/log(1))*log((1+X)))*(cos(1)*sin((sin(1)*cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((sin(1)/(1*1)))/log(log(log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(sin(sin(((1-1)+(1-1)))))*cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(1-1))*(sin(X)/log(cos(1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((log(log(1))/log(1))*cos(1))*((sin(1)+(1-1))-(log(1)/(sin(X)/cos(cos(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin((sin(1)*cos(X)))+log(log(sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(X)+log(cos(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)*(1-1))/(sin(X)/log(log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1*1)/(1-1))*(sin(log(log(1)))/log(cos(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((log(X)-(X*1))-(sin(1)/(X*X)))/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(sin(((X/1)*cos(1)))+sin(log(log(log(cos(cos(cos(log(cos(1))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(log(1))/(1+1))/(cos(X)-cos(log(log(X)))))+log(log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((log(sin(sin(1)))*sin(sin(log(1))))*(sin(X)/log(cos(1)))))', 'y_predict': [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '((X*1)/log((sin(log((log((sin(1)*sin(1)))-(1/1))))-log(sin(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))/log(cos(cos(log(log(X))))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '((sin(1)+log(1))+log(log(cos(log((X-X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(((sin(1)*sin(X))-(log(1)/(X*X)))/log((sin(1)-((cos(X)/log(1))*cos((1/1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((sin(1)/log(1))*sin((X*1)))*((sin(1)*((1-X)-(1/X)))-(sin(1)/(1*1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((log(X)-(X-1))-(sin(1)/(X-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(((log(cos(X))/(1+1))/(cos(X)-cos(log(sin(X)))))+log(log(cos(cos(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-1))/log((sin(1)*(sin(1)*log(1)))))*(1*1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((1-1)*(sin(1)/sin(((1-1)+(1-1)))))*(log(1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-X))/log((sin(1)*(1-1))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin(((((log((X-X))-log((sin(1)*(1-1))))*(1-1))*(log((X-1))*log((X+1))))*(log(1)/log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '(((log(log(1))/log(1))*log(cos(sin(log(log((1+X)))))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((1-1))/log((sin(X)/(1*1))))*(1*1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(cos(1)+log(log(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((log((X-X))/cos(sin(((1-1)+(1-1)))))*((sin(X)*(1-1))-(log(1)/(1/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))-log((cos(1)*(1-1))))*(1-1))*(log((X-1))*log((X+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(*), 'expresion': '((X+1)*((sin(log(log(X)))*(1*1))*sin((log(sin(log(1)))*log(1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(/), 'expresion': '(log((sin(1)/(1*1)))/log(sin(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(sin), 'expresion': 'sin((((log((X-X))/log((sin(1)*(((log((X-X))/log((sin(1)*((1-1)+(X*1)))))*log(1))+(X*1)))))*(1-1))*(sin(1)-cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}","{'tree': Node(+), 'expresion': '(log(log(log(X)))+(((sin(X)-(X-X))-(sin(1)/(1-X)))-(log(1)+cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.2899), 'isValida': True}"
