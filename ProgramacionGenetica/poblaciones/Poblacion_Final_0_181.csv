,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99
0,"{'tree': Node(*), 'expresion': '(sin(log(sin(sin(X))))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*log(log(1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(X))-sin((X/1)))/cos(sin(log((1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(((X*1)-sin(X)))*(cos((X-X))/((1-1)*sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(log(1)))-sin(((sin(X)*log(1))+(1-1))))/cos(cos(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(X))*sin(log(sin(X)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/sin(X))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(cos(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(((1-X)/(X*X)))/((log(X)*(1-1))/((1*1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+X)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(sin(log(X))*log(log(sin(log((1-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*(log(X)-cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(X)/log(1))+((sin(X)/log(1))+(1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(1))*sin((X+1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((log(log(1))*log(sin((1-X))))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(sin(X)))))/(((1-1)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(X+1))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(cos(X)))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(X)))*((log(1)*cos(X))/(cos(X)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*X))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(sin(1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/X)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)-((X+X)+cos(cos(X))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X+X))*sin(X))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(sin(1))*(sin((1-1))-(1-1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(X))-((X-X)+log((sin((X+1))*cos(sin((1-1)))))))*((log(1)*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(((1*1)/cos(1))))/cos(cos(cos(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(1))/cos(cos(sin((1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*(log(X)*(1-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((X+1)/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(sin(1))-log((1-1)))/log((sin(log(1))*cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(1))-((X+X)*cos(cos(X))))*((log(log(1))*cos(X))/(sin(X)+sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X/1))*log(sin((1+X))))))/cos(cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*cos(cos(X))))*((log(1)*cos(X))/(cos(1)-sin(1))))', 'y_predict': [np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(log(1)))*sin((X+1)))/cos(sin(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(1+X))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(cos((log(1)*sin(log(log(1))))))*(cos(X)+((X+1)*(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(1))+cos(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(1+X))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*log((1*1)))/cos((X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/sin(((X/X)*(1+1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(sin(log(X))*log(log(sin(log((1-1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*((log(1)*sin(1))/(log(1)-sin(X))))', 'y_predict': [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(sin(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X+1))*cos(log((sin(X)*log(1)))))))/cos(cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(log(((sin(X)*cos(1))*log(cos(X))))+(((1-X)-log(1))-(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(sin(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1/X)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-sin((X*1)))/cos(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((1/X)+(1/1))*((sin(log(1))*cos(X))/(log(1)+sin(1))))', 'y_predict': [np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(cos(1)))/cos(log(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-sin((X+X)))/cos(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos(1)/((1-X)*sin(X)))/cos(cos(log((X-1)))))/((sin(1)-(X+X))*log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))+((sin(X)*log(1))+(1-1)))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log((X/1)))/log((sin((X+X))*log(sin((cos(X)-((X+X)*cos(cos(X)))))))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(1)*cos(X))*sin(log(sin(X)))))/(((X-X)*log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(sin(1))*(sin((1-1))-(1-1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((1+X)))/cos(cos((1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(log(1))*sin((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log((sin(1)/(log(X)*(1+1))))+(log(log(1))/(X+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((log(log(1))*log(log(1)))))/sin(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((log((1-1))*((X/1)*sin(log(sin(((log(X)-cos(1))/log(cos(X))))))))+((sin(X)*log(X))+(1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/X)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((cos(X)*cos(X))*sin(log(log(log(1))))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(log(X)))-((X+X)+cos(cos(X))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+cos(sin(log((X-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(sin(1))*log((1-1)))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(sin(log(sin(sin(X)))))-sin((X*1)))/cos(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(((1*1)/cos(1))))/cos(cos(sin((1-1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((1/1)/(1+1))*((log(1)*cos(X))/(log(1)+sin(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/1)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(1)))))-(X+1))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(1)))-(sin(((sin(X)*cos(1))*sin(log(cos(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(sin(1)))/cos(cos(log((1/1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+X)+((1/X)+(sin(log(X))*sin(log(sin(log((1-X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*log(cos(cos(1)))))/(((X-1)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+1)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((1-1)*((sin(((sin(X)+cos(1))*log(cos(X))))*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-log((sin((X+X))*log(sin((sin((1-1))-(1-1)))))))/cos(sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-(log(sin(X))/cos(cos(X))))*(log(X)*(1-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(X))-(log((1*X))-(log(1)*sin(log(log(1))))))*((log(1)*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(cos(1)*sin(log(sin(log((1-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*sin((1*1)))/log(log(cos(log((1-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*sin((X+1)))/cos(sin(sin(((X/X)+(X+1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(log(log(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(sin((1-1))))-((X*X)*sin(1)))*((log(1)*cos(X))/(log(1)-sin(X))))', 'y_predict': [np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*((log(1)*sin(1))/(log(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(((X*1)-sin(X)))*(cos((X-1))/((1-1)*sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-log((sin((X+X))*log((sin((X/1))*sin(sin((1+X))))))))/cos(sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(sin(log(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))+(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((X-X)/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(1))*sin(X))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)-((X+X)+cos(sin(log(X)))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(sin(sin(X))))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}"
1,"{'tree': Node(*), 'expresion': '(sin(log(sin(sin(X))))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*log(log(1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(X))-sin((X/1)))/cos(sin(log((1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(((X*1)-sin(X)))*(cos((X-X))/((1-1)*sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(log(1)))-sin(((sin(X)*log(1))+(1-1))))/cos(cos(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(X))*sin(log(sin(X)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/sin(X))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(cos(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(((1-X)/(X*X)))/((log(X)*(1-1))/((1*1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+X)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(sin(log(X))*log(log(sin(log((1-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*(log(X)-cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(X)/log(1))+((sin(X)/log(1))+(1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(1))*sin((X+1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((log(log(1))*log(sin((1-X))))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(sin(X)))))/(((1-1)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(X+1))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(cos(X)))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(X)))*((log(1)*cos(X))/(cos(X)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*X))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(sin(1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/X)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)-((X+X)+cos(cos(X))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X+X))*sin(X))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(sin(1))*(sin((1-1))-(1-1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(X))-((X-X)+log((sin((X+1))*cos(sin((1-1)))))))*((log(1)*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(((1*1)/cos(1))))/cos(cos(cos(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(1))/cos(cos(sin((1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*(log(X)*(1-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((X+1)/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(sin(1))-log((1-1)))/log((sin(log(1))*cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(1))-((X+X)*cos(cos(X))))*((log(log(1))*cos(X))/(sin(X)+sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X/1))*log(sin((1+X))))))/cos(cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*cos(cos(X))))*((log(1)*cos(X))/(cos(1)-sin(1))))', 'y_predict': [np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(log(1)))*sin((X+1)))/cos(sin(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(1+X))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(cos((log(1)*sin(log(log(1))))))*(cos(X)+((X+1)*(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(1))+cos(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(1+X))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*log((1*1)))/cos((X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/sin(((X/X)*(1+1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(sin(log(X))*log(log(sin(log((1-1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*((log(1)*sin(1))/(log(1)-sin(X))))', 'y_predict': [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(sin(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X+1))*cos(log((sin(X)*log(1)))))))/cos(cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(log(((sin(X)*cos(1))*log(cos(X))))+(((1-X)-log(1))-(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(sin(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1/X)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-sin((X*1)))/cos(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((1/X)+(1/1))*((sin(log(1))*cos(X))/(log(1)+sin(1))))', 'y_predict': [np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(cos(1)))/cos(log(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-sin((X+X)))/cos(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos(1)/((1-X)*sin(X)))/cos(cos(log((X-1)))))/((sin(1)-(X+X))*log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))+((sin(X)*log(1))+(1-1)))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log((X/1)))/log((sin((X+X))*log(sin((cos(X)-((X+X)*cos(cos(X)))))))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(1)*cos(X))*sin(log(sin(X)))))/(((X-X)*log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(sin(1))*(sin((1-1))-(1-1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((1+X)))/cos(cos((1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(log(1))*sin((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log((sin(1)/(log(X)*(1+1))))+(log(log(1))/(X+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((log(log(1))*log(log(1)))))/sin(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((log((1-1))*((X/1)*sin(log(sin(((log(X)-cos(1))/log(cos(X))))))))+((sin(X)*log(X))+(1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/X)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((cos(X)*cos(X))*sin(log(log(log(1))))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(log(X)))-((X+X)+cos(cos(X))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+cos(sin(log((X-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(sin(1))*log((1-1)))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(sin(log(sin(sin(X)))))-sin((X*1)))/cos(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(((1*1)/cos(1))))/cos(cos(sin((1-1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((1/1)/(1+1))*((log(1)*cos(X))/(log(1)+sin(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/1)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(1)))))-(X+1))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(1)))-(sin(((sin(X)*cos(1))*sin(log(cos(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(sin(1)))/cos(cos(log((1/1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+X)+((1/X)+(sin(log(X))*sin(log(sin(log((1-X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*log(cos(cos(1)))))/(((X-1)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+1)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((1-1)*((sin(((sin(X)+cos(1))*log(cos(X))))*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-log((sin((X+X))*log(sin((sin((1-1))-(1-1)))))))/cos(sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-(log(sin(X))/cos(cos(X))))*(log(X)*(1-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(X))-(log((1*X))-(log(1)*sin(log(log(1))))))*((log(1)*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(cos(1)*sin(log(sin(log((1-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*sin((1*1)))/log(log(cos(log((1-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*sin((X+1)))/cos(sin(sin(((X/X)+(X+1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(log(log(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(sin((1-1))))-((X*X)*sin(1)))*((log(1)*cos(X))/(log(1)-sin(X))))', 'y_predict': [np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*((log(1)*sin(1))/(log(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(((X*1)-sin(X)))*(cos((X-1))/((1-1)*sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-log((sin((X+X))*log((sin((X/1))*sin(sin((1+X))))))))/cos(sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(sin(log(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))+(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((X-X)/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(1))*sin(X))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)-((X+X)+cos(sin(log(X)))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(sin(sin(X))))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}"
2,"{'tree': Node(*), 'expresion': '(sin(log(sin(sin(X))))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*log(log(1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(X))-sin((X/1)))/cos(sin(log((1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(((X*1)-sin(X)))*(cos((X-X))/((1-1)*sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(log(1)))-sin(((sin(X)*log(1))+(1-1))))/cos(cos(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(X))*sin(log(sin(X)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/sin(X))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(cos(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(((1-X)/(X*X)))/((log(X)*(1-1))/((1*1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+X)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(sin(log(X))*log(log(sin(log((1-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*(log(X)-cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(X)/log(1))+((sin(X)/log(1))+(1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(1))*sin((X+1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((log(log(1))*log(sin((1-X))))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(sin(X)))))/(((1-1)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(X+1))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(cos(X)))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(X)))*((log(1)*cos(X))/(cos(X)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*X))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(sin(1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/X)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)-((X+X)+cos(cos(X))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X+X))*sin(X))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(sin(1))*(sin((1-1))-(1-1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(X))-((X-X)+log((sin((X+1))*cos(sin((1-1)))))))*((log(1)*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(((1*1)/cos(1))))/cos(cos(cos(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(1))/cos(cos(sin((1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*(log(X)*(1-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((X+1)/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(sin(1))-log((1-1)))/log((sin(log(1))*cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(1))-((X+X)*cos(cos(X))))*((log(log(1))*cos(X))/(sin(X)+sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X/1))*log(sin((1+X))))))/cos(cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*cos(cos(X))))*((log(1)*cos(X))/(cos(1)-sin(1))))', 'y_predict': [np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(log(1)))*sin((X+1)))/cos(sin(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(1+X))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(cos((log(1)*sin(log(log(1))))))*(cos(X)+((X+1)*(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(1))+cos(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(1+X))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*log((1*1)))/cos((X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/sin(((X/X)*(1+1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(sin(log(X))*log(log(sin(log((1-1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*((log(1)*sin(1))/(log(1)-sin(X))))', 'y_predict': [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(sin(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X+1))*cos(log((sin(X)*log(1)))))))/cos(cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(log(((sin(X)*cos(1))*log(cos(X))))+(((1-X)-log(1))-(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(sin(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1/X)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-sin((X*1)))/cos(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((1/X)+(1/1))*((sin(log(1))*cos(X))/(log(1)+sin(1))))', 'y_predict': [np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(cos(1)))/cos(log(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-sin((X+X)))/cos(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos(1)/((1-X)*sin(X)))/cos(cos(log((X-1)))))/((sin(1)-(X+X))*log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))+((sin(X)*log(1))+(1-1)))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log((X/1)))/log((sin((X+X))*log(sin((cos(X)-((X+X)*cos(cos(X)))))))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(1)*cos(X))*sin(log(sin(X)))))/(((X-X)*log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(sin(1))*(sin((1-1))-(1-1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((1+X)))/cos(cos((1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(log(1))*sin((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log((sin(1)/(log(X)*(1+1))))+(log(log(1))/(X+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((log(log(1))*log(log(1)))))/sin(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((log((1-1))*((X/1)*sin(log(sin(((log(X)-cos(1))/log(cos(X))))))))+((sin(X)*log(X))+(1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/X)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((cos(X)*cos(X))*sin(log(log(log(1))))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(log(X)))-((X+X)+cos(cos(X))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+cos(sin(log((X-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(sin(1))*log((1-1)))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(sin(log(sin(sin(X)))))-sin((X*1)))/cos(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(((1*1)/cos(1))))/cos(cos(sin((1-1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((1/1)/(1+1))*((log(1)*cos(X))/(log(1)+sin(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/1)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(1)))))-(X+1))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(1)))-(sin(((sin(X)*cos(1))*sin(log(cos(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(sin(1)))/cos(cos(log((1/1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+X)+((1/X)+(sin(log(X))*sin(log(sin(log((1-X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*log(cos(cos(1)))))/(((X-1)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+1)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((1-1)*((sin(((sin(X)+cos(1))*log(cos(X))))*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-log((sin((X+X))*log(sin((sin((1-1))-(1-1)))))))/cos(sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-(log(sin(X))/cos(cos(X))))*(log(X)*(1-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(X))-(log((1*X))-(log(1)*sin(log(log(1))))))*((log(1)*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(cos(1)*sin(log(sin(log((1-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*sin((1*1)))/log(log(cos(log((1-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*sin((X+1)))/cos(sin(sin(((X/X)+(X+1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(log(log(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(sin((1-1))))-((X*X)*sin(1)))*((log(1)*cos(X))/(log(1)-sin(X))))', 'y_predict': [np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*((log(1)*sin(1))/(log(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(((X*1)-sin(X)))*(cos((X-1))/((1-1)*sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-log((sin((X+X))*log((sin((X/1))*sin(sin((1+X))))))))/cos(sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(sin(log(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))+(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((X-X)/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(1))*sin(X))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)-((X+X)+cos(sin(log(X)))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(sin(sin(X))))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}"
3,"{'tree': Node(*), 'expresion': '(sin(log(sin(sin(X))))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*log(log(1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(X))-sin((X/1)))/cos(sin(log((1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(((X*1)-sin(X)))*(cos((X-X))/((1-1)*sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(log(1)))-sin(((sin(X)*log(1))+(1-1))))/cos(cos(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(X))*sin(log(sin(X)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/sin(X))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(cos(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(((1-X)/(X*X)))/((log(X)*(1-1))/((1*1)/sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+X)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(sin(log(X))*log(log(sin(log((1-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(1)))*(log(X)-cos(1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((cos(X)/log(1))+((sin(X)/log(1))+(1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(1))*sin((X+1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((log(log(1))*log(sin((1-X))))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(sin(X)))))/(((1-1)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(X+1))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(log(log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(cos(X)))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(log(X)))*((log(1)*cos(X))/(cos(X)-sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*X))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(sin(1)))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/X)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)-((X+X)+cos(cos(X))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X+X))*sin(X))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(sin(1))*(sin((1-1))-(1-1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(X))-((X-X)+log((sin((X+1))*cos(sin((1-1)))))))*((log(1)*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(((1*1)/cos(1))))/cos(cos(cos(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(1))/cos(cos(sin((1-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*(log(X)*(1-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((X+1)/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(sin(1))-log((1-1)))/log((sin(log(1))*cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(1))-((X+X)*cos(cos(X))))*((log(log(1))*cos(X))/(sin(X)+sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X/1))*log(sin((1+X))))))/cos(cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*cos(cos(X))))*((log(1)*cos(X))/(cos(1)-sin(1))))', 'y_predict': [np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(log(1)))*sin((X+1)))/cos(sin(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(1+X))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(cos((log(1)*sin(log(log(1))))))*(cos(X)+((X+1)*(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log(cos(1))+cos(log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(X)))))-(1+X))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*log((1*1)))/cos((X*X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(1)/sin(((X/X)*(1+1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(sin(log(X))*log(log(sin(log((1-1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*((log(1)*sin(1))/(log(1)-sin(X))))', 'y_predict': [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*sin(log(sin(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((sin((X+1))*cos(log((sin(X)*log(1)))))))/cos(cos(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(log(((sin(X)*cos(1))*log(cos(X))))+(((1-X)-log(1))-(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(sin(log(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1/X)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-sin((X*1)))/cos(1))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((1/X)+(1/1))*((sin(log(1))*cos(X))/(log(1)+sin(1))))', 'y_predict': [np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(cos(1)))/cos(log(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-sin((X+X)))/cos(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(((cos(1)/((1-X)*sin(X)))/cos(cos(log((X-1)))))/((sin(1)-(X+X))*log(cos(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((cos(X)/log(1))+((sin(X)*log(1))+(1-1)))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log((X/1)))/log((sin((X+X))*log(sin((cos(X)-((X+X)*cos(cos(X)))))))))/cos(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(1)*cos(X))*sin(log(sin(X)))))/(((X-X)*log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(sin(1))*(sin((1-1))-(1-1)))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+log(log(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((1+X)))/cos(cos((1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(log(1))*sin((X/1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log((log((sin(1)/(log(X)*(1+1))))+(log(log(1))/(X+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))/log((log(log(1))*log(log(1)))))/sin(sin(cos(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(cos), 'expresion': 'cos(((log((1-1))*((X/1)*sin(log(sin(((log(X)-cos(1))/log(cos(X))))))))+((sin(X)*log(X))+(1-1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/X)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((cos(X)*cos(X))*sin(log(log(log(1))))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(log(X)))-((X+X)+cos(cos(X))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(1)*(sin(log(1))+cos(sin(log((X-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(sin(1))*log((1-1)))/log((1*1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(sin(log(sin(sin(X)))))-sin((X*1)))/cos(cos(X)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))/log(((1*1)/cos(1))))/cos(cos(sin((1-1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(((1/1)/(1+1))*((log(1)*cos(X))/(log(1)+sin(1))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X/1)))/sin(((X/X)*(1+1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos((1/1))*((X/1)+log(X)))*((log(log(sin(cos(log(1)))))-(X+1))-(X/1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(1)))-(sin(((sin(X)*cos(1))*sin(log(cos(1)))))/(((X-X)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((sin(log(1))*cos(sin(1)))/cos(cos(log((1/1)))))', 'y_predict': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+X)+((1/X)+(sin(log(X))*sin(log(sin(log((1-X))))))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(-), 'expresion': '(sin(log(log(X)))-(sin(((sin(X)*cos(1))*log(cos(cos(1)))))/(((X-1)-log(1))-(1+X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '(log(log((X*X)))/sin(((1+1)+((1/X)+(1+1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((1-1)*((sin(((sin(X)+cos(1))*log(cos(X))))*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-log((sin((X+X))*log(sin((sin((1-1))-(1-1)))))))/cos(sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-(log(sin(X))/cos(cos(X))))*(log(X)*(1-1)))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(sin(X))-(log((1*X))-(log(1)*sin(log(log(1))))))*((log(1)*cos(X))/(sin(X)-sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(log(X)*(cos(1)*sin(log(sin(log((1-X)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*sin((1*1)))/log(log(cos(log((1-1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))*sin((X+1)))/cos(sin(sin(((X/X)+(X+1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))-(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(log(log(1)))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(cos(sin((1-1))))-((X*X)*sin(1)))*((log(1)*cos(X))/(log(1)-sin(X))))', 'y_predict': [np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(-0.0), np.float64(0.0), np.float64(0.0)], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((cos(X)-((X+X)*sin(1)))*((log(1)*sin(1))/(log(1)*sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(cos(((X*1)-sin(X)))*(cos((X-1))/((1-1)*sin(1))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log(log(1))-log((sin((X+X))*log((sin((X/1))*sin(sin((1+X))))))))/cos(sin(sin(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(log), 'expresion': 'log(cos(log(sin(log(log(1))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((log((1*1))+(log(1)*sin(log(log(1)))))/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((X-X)/((cos(X)-sin(X))*log(log(sin(sin(X))))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(/), 'expresion': '((cos(log(1))*sin(X))/cos(sin(log((X-1)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '((sin(1)-((X+X)+cos(sin(log(X)))))*((log(1)*cos(X))/(cos(X)-log(log(X)))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}","{'tree': Node(*), 'expresion': '(sin(log(sin(sin(X))))*(cos(sin(X))+log(log(X))))', 'y_predict': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'mse': np.float64(1.8343), 'isValida': True}"
